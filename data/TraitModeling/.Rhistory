library(ape)
library(vegan)
library(phytools)
library(plotrix)
setwd("Z:/BioDataLab/guerin_brown/inquiline_cophylogeny_inqcophy/synergus_PACo/final_scripts")
parasitetree <- "Z:/BioDataLab/guerin_brown/inquiline_cophylogeny_inqcophy/synergus_PACo/final_scripts/data/PACo/inqcophy_PACo_UCECO1SynTree_guerbrown.nex"
hosttree <- "Z:/BioDataLab/guerin_brown/inquiline_cophylogeny_inqcophy/synergus_PACo/final_scripts/data/PACo/inqcophy_PACo_CynipidTree_guerbrown.nex"
assocdata <- "Z:/BioDataLab/guerin_brown/inquiline_cophylogeny_inqcophy/synergus_PACo/final_scripts/data/PACo/inqcophy_PACo_AssociationMatrix_guerbrown.csv"
library(paco)
library(ape)
library(vegan)
library(phytools)
library(plotrix)
# Pull in the data
p <- read.nexus(parasitetree)
h <- read.nexus(hosttree)
hp <- read.csv(assocdata)
# Automatic removal of species from the gallformer tree
keepvec <- as.vector(hp$Host)
hprunevec <- setdiff(h$tip.label, keepvec)
h <- drop.tip(h, hprunevec)
# Removing taxa that weren't in the tree at all
keeptipsh <- h$tip.label
rows_to_remove_h <- !hp$Host %in% keeptipsh
hp <- hp[!rows_to_remove_h,]
# Removing taxa from the Ceroptres tree that were lost in pruning of the gallformer tree
keepvec2 <- as.vector(hp$Parasite)
pprunevec <- setdiff(p$tip.label, keepvec2)
p <- drop.tip(p, pprunevec)
# Duplicates arose from this automated pruning process, so let's quickly remove them
hp <- unique(hp)
library(paco)
library(ape)
library(vegan)
library(phytools)
library(plotrix)
# Pull in the data
p <- read.nexus(parasitetree)
h <- read.nexus(hosttree)
hp <- read.csv(assocdata)
# Automatic removal of species from the gallformer tree
keepvec <- as.vector(hp$Host)
hprunevec <- setdiff(h$tip.label, keepvec)
h <- drop.tip(h, hprunevec)
# Removing taxa that weren't in the tree at all
keeptipsh <- h$tip.label
rows_to_remove_h <- !hp$Host %in% keeptipsh
hp <- hp[!rows_to_remove_h,]
# Removing taxa from the Ceroptres tree that were lost in pruning of the gallformer tree
keepvec2 <- as.vector(hp$Parasite)
pprunevec <- setdiff(p$tip.label, keepvec2)
p <- drop.tip(p, pprunevec)
# Duplicates arose from this automated pruning process, so let's quickly remove them
hp <- unique(hp)
setwd("Z:/BioDataLab/guerin_brown/inquiline_cophylogeny_inqcophy/synergus_PACo/final_scripts")
parasitetree <- "Z:/BioDataLab/guerin_brown/inquiline_cophylogeny_inqcophy/synergus_PACo/final_scripts/data/PACo/inqcophy_PACo_UCECO1SynTree_guerbrown.nex"
hosttree <- "Z:/BioDataLab/guerin_brown/inquiline_cophylogeny_inqcophy/synergus_PACo/final_scripts/data/PACo/inqcophy_PACo_CynipidTree_guerbrown.nex"
assocdata <- "Z:/BioDataLab/guerin_brown/inquiline_cophylogeny_inqcophy/synergus_PACo/final_scripts/data/PACo/inqcophy_PACo_AssociationMatrix_guerbrown.csv"
knitr::opts_chunk$set(echo = TRUE)
setwd("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/data/PACo")
parasitetree <- "/home/guerbrown/github_local/biol-4386-course-project-guerbrown/data/PACo/inqcophy_PACo_UCECO1SynTree_guerbrown.nex"
hosttree <- "/home/guerbrown/github_local/biol-4386-course-project-guerbrown/data/PACo/inqcophy_PACo_CynipidTree_guerbrown.nex"
assocdata <- "/home/guerbrown/github_local/biol-4386-course-project-guerbrown/data/PACo/inqcophy_PACo_AssociationMatrix_guerbrown.csv"
library(paco)
library(ape)
library(vegan)
library(phytools)
library(plotrix)
setwd("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output")
svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_PACo_SynTree_guerbrown.svg")
#Import
p <- readNexus(parasitetree)
#Fixing tip labels. This is unnecessary but it's nice to make sure everything is plotting correctly
tiplabel_syn <- c("Synergus_sp.6", "S._punctatus_A", "S._campanula_A", "Synergus_sp.3", "Synergus_sp.7", "Synergus_sp.8",
"S._walshii_A", "S._erinacei_A", "S._erinacei_B", "S._villosus", "S._magnus", "Synergus_sp.2",
"S._ochreus", "S._oneratus_A", "S._oneratus_B", "S._oneratus_C", "S._coniferae", "S._lignicola",
"S._laeviventris_A", "S._laeviventris_B", "S._laeviventris_C")
p$tip.label <- tiplabel_syn
#Rooting the phylogeny based on a version of the tree with an outgroup and plotting
root.phylo(p, 1, resolve.root = T)
plot.phylo(p, align.tip.label = T, use.edge.length = F, root.edge = T)
dev.off()
svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_PACo_CynipTree_guerbrown.svg", width = 20, height = 10)
#Import
h <- read.nexus(hosttree)
tiplabel_gall <- c("Disholcaspis_quercusglobulus", "Disholcaspis_quercusmamma", "Acraspis_villosa", "Acraspis_quercushirta", "Acraspis_pezomachoides", "Acraspis_erinacei", "Druon_ignotum", "Druon_quercuslanigerum", "Cynips_conspicuus","Philonix_fulvicollis", "Atrusca_quercuscentricola", "Belonocnema_kinseyi", "Andricus_quercusstrobilanus", "Andricus_pisiformis", "Andricus_kingii", "Callirhytis_quercuspunctata", "Callirhytis_quercusventricosa", "Dryocosmus_minusculus", "Amphibolips_quercusostensackenii", "Amphibolips_quercusjuglans", "Amphibolips_cookii")
h$tip.label <- tiplabel_gall
root.phylo(h, 1, resolve.root = T)
plot.phylo(h, align.tip.label = T, use.edge.length = F, root.edge = T)
dev.off()
#Association matrix import
assoc <- read.table(assocdata, header = T, sep = ",")
#modifying the association matrix to make it readable by the program
hp <- as.data.frame.matrix(assoc)
#Removing underscores from the labels
h$tip.label <- gsub("_", " ", h$tip.label)
p$tip.label <- gsub("_", " ", p$tip.label)
hp$Gallers <- gsub("_", " ", hp$Galler)
hp$Synergus <- gsub("_", " ", hp$Synergus)
#plotting the tangelgram
cophyloplot <- cophyloplot(h, p, hp, show.tip.label = T,
lwd = 4, col = make.transparent("black", 0.3), font = 4,
length.line = 0, gap = -1, space = 135, rotate = F,  align.tip.label = T,
use.edge.length = F, root.edge = T)+
text(5,19.7, "Cynipidae", cex = 1.2)+
text(168, 20.20, "Synergus", cex = 1.2)
#Change the two column association matrix into a binary association matrix. This is necessary to calculate principle coordinates in the statistical section.
hp_binary <- table(hp)
h_dist <- cophenetic(h)
p_dist <- cophenetic(p)
#Prepare PACo data and compute the result with 1,000 permutations.
D <- prepare_paco_data(h_dist, p_dist, hp_binary)
D <- add_pcoord(D)
D <- PACo(D, nperm=1000, seed = NA, method= "r0", proc.warning = F)
residuals_paco(D$proc)
HP.proc <- procrustes(D$H_PCo, D$P_PCo)
HostX <- HP.proc$X
ParY <- HP.proc$Yrot
#Let's make a few versions of the procrustes plot
#Here's one that has everything on it. If it's overwhelming to study, consider using identify() instead of text(). This will allow you to click and choose which points are labeled.
svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_PACo_FullProcPlot_guerbrown.svg", width = 20, height = 10)
plot(HostX, asp=1, pch=120)
points(ParY, pch=1)
arrows(ParY[,1], ParY[,2], HostX[,1], HostX[,2], length=0.10, angle = 90, xpd=T)
HostX <- unique(HP.proc$X)
ParY <- unique(HP.proc$Yrot)
text(ParY[,1], ParY[,2], rownames(ParY), offset=0.3, xpd=F, cex=0.7)
text(HostX[,1], HostX[,2], rownames(HostX),offset=0.3, xpd=F, cex= 0.7)
dev.off()
#Now, here's one without the lines and just Synergus
svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_PACo_SynProcPlot_guerbrown.svg", width = 20, height = 10)
plot(HostX, asp=1, pch=120)
points(ParY, pch=1)
HostX <- unique(HP.proc$X)
ParY <- unique(HP.proc$Yrot)
text(ParY[,1], ParY[,2], rownames(ParY), offset=0.3, xpd=F, cex=0.7)
dev.off()
#And here's another with just the Cynipid taxa
svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_PACo_CynProcPlot_guerbrown.svg", width = 20, height = 10)
plot(HostX, asp=1, pch=120)
points(ParY, pch=1)
HostX <- unique(HP.proc$X)
ParY <- unique(HP.proc$Yrot)
text(HostX[,1], HostX[,2], rownames(HostX),offset=0.3, xpd=F, cex= 0.7)
dev.off()
NLinks = 25
SQres <- sort(residuals_paco(D$proc))
SQres.jackn <- SQres**2
SQres <- (residuals (HP.proc)**2)
SQres.jackn <- SQres.jackn*(-(NLinks-1))
SQres.jackn <- SQres.jackn*-1
SQres <- SQres*NLinks
SQres <- as.matrix(SQres)
SQres.jackn <- as.data.frame(SQres.jackn)
SQres.jackn <- t(apply(SQres.jackn, 1, "+", SQres))
phi.mean <- apply(SQres.jackn, 2, mean, na.rm = TRUE)
phi.UCI <- apply(SQres.jackn, 2, sd, na.rm = TRUE)
t.critical = qt(0.975, NLinks-1)
phi.UCI <- phi.mean + t.critical * phi.UCI/sqrt(NLinks)
phi.UCI
par(mar = c(7, 5, 3, 6))
pat.bar <- barplot(sort(phi.mean), names.arg = "", space = 0.2, col="white", ylab= "Squared residuals", ylim=c(0, max(phi.UCI)),cex.lab=1)
segments(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5)
arrows(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5, angle = 90, code = 3, length = 0.05)
abline(a=median(phi.mean), b=0, lty=2)
text(pat.bar, par("usr")[3] - 0.001, srt = 330, adj = 0, labels = rownames(SQres.jackn), xpd = TRUE, font = 3, cex=0.65, las = 2)
text(22.32, 0.05, '*', cex = 3)
text(25.93, 0.053, '*', cex = 3)
NLinks = 25
SQres <- sort(residuals_paco(D$proc))
SQres.jackn <- SQres**2
SQres <- (residuals (HP.proc)**2)
SQres.jackn <- SQres.jackn*(-(NLinks-1))
SQres.jackn <- SQres.jackn*-1
SQres <- SQres*NLinks
SQres <- as.matrix(SQres)
SQres.jackn <- as.data.frame(SQres.jackn)
SQres.jackn <- t(apply(SQres.jackn, 1, "+", SQres))
phi.mean <- apply(SQres.jackn, 2, mean, na.rm = TRUE)
phi.UCI <- apply(SQres.jackn, 2, sd, na.rm = TRUE)
t.critical = qt(0.975, NLinks-1)
phi.UCI <- phi.mean + t.critical * phi.UCI/sqrt(NLinks)
phi.UCI
par(mar = c(7, 5, 3, 6))
pat.bar <- barplot(sort(phi.mean), names.arg = "", space = 0.2, col="white", ylab= "Squared residuals", ylim=c(0, max(phi.UCI)),cex.lab=1)
segments(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5)
arrows(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5, angle = 90, code = 3, length = 0.05)
abline(a=median(phi.mean), b=0, lty=2)
text(pat.bar, par("usr")[3] - 0.001, srt = 330, adj = 0, labels = rownames(SQres.jackn), xpd = TRUE, font = 3, cex=1, las = 2)
text(22.32, 0.05, '*', cex = 3)
text(25.93, 0.053, '*', cex = 3)
par(mar = c(7, 5, 3, 6))
pat.bar <- barplot(sort(phi.mean), names.arg = "", space = 0.2, col="white", ylab= "Squared residuals", ylim=c(0, max(phi.UCI)),cex.lab=1)
segments(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5)
arrows(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5, angle = 90, code = 3, length = 0.05)
abline(a=median(phi.mean), b=0, lty=2)
text(pat.bar, par("usr")[3] - 0.001, srt = 330, adj = 0, labels = rownames(SQres.jackn), xpd = TRUE, font = 3, cex=0.8, las = 2)
text(22.32, 0.05, '*', cex = 3)
text(25.93, 0.053, '*', cex = 3)
NLinks = 25
SQres <- sort(residuals_paco(D$proc))
SQres.jackn <- SQres**2
SQres <- (residuals (HP.proc)**2)
SQres.jackn <- SQres.jackn*(-(NLinks-1))
SQres.jackn <- SQres.jackn*-1
SQres <- SQres*NLinks
SQres <- as.matrix(SQres)
SQres.jackn <- as.data.frame(SQres.jackn)
SQres.jackn <- t(apply(SQres.jackn, 1, "+", SQres))
phi.mean <- apply(SQres.jackn, 2, mean, na.rm = TRUE)
phi.UCI <- apply(SQres.jackn, 2, sd, na.rm = TRUE)
t.critical = qt(0.975, NLinks-1)
phi.UCI <- phi.mean + t.critical * phi.UCI/sqrt(NLinks)
phi.UCI
par(mar = c(7, 5, 3, 6))
pat.bar <- barplot(sort(phi.mean), names.arg = "", space = 0.2, col="white", ylab= "Squared residuals", ylim=c(0, max(phi.UCI)),cex.lab=1)
segments(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5)
arrows(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5, angle = 90, code = 3, length = 0.05)
abline(a=median(phi.mean), b=0, lty=2)
text(pat.bar, par("usr")[3] - 0.001, srt = 330, adj = 0, labels = rownames(SQres.jackn), xpd = TRUE, font = 3, cex=0.8, las = 2)
text(22.32, 0.05, '*', cex = 3)
text(25.93, 0.053, '*', cex = 3)
text(pat.bar, par("usr")[3] - 0.001, srt = 330, adj = 0, labels = rownames(SQres.jackn), xpd = TRUE, font = 3, cex=1, las = 2)
NLinks = 25
SQres <- sort(residuals_paco(D$proc))
SQres.jackn <- SQres**2
SQres <- (residuals (HP.proc)**2)
SQres.jackn <- SQres.jackn*(-(NLinks-1))
SQres.jackn <- SQres.jackn*-1
SQres <- SQres*NLinks
SQres <- as.matrix(SQres)
SQres.jackn <- as.data.frame(SQres.jackn)
SQres.jackn <- t(apply(SQres.jackn, 1, "+", SQres))
phi.mean <- apply(SQres.jackn, 2, mean, na.rm = TRUE)
phi.UCI <- apply(SQres.jackn, 2, sd, na.rm = TRUE)
t.critical = qt(0.975, NLinks-1)
phi.UCI <- phi.mean + t.critical * phi.UCI/sqrt(NLinks)
phi.UCI
par(mar = c(7, 5, 3, 6))
pat.bar <- barplot(sort(phi.mean), names.arg = "", space = 0.2, col="white", ylab= "Squared residuals", ylim=c(0, max(phi.UCI)),cex.lab=1)
segments(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5)
arrows(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5, angle = 90, code = 3, length = 0.05)
abline(a=median(phi.mean), b=0, lty=2)
text(pat.bar, par("usr")[3] - 0.001, srt = 330, adj = 0, labels = rownames(SQres.jackn), xpd = TRUE, font = 3, cex=1, las = 2)
text(22.32, 0.05, '*', cex = 3)
text(25.93, 0.053, '*', cex = 3)
NLinks = 25
SQres <- sort(residuals_paco(D$proc))
SQres.jackn <- SQres**2
SQres <- (residuals (HP.proc)**2)
SQres.jackn <- SQres.jackn*(-(NLinks-1))
SQres.jackn <- SQres.jackn*-1
SQres <- SQres*NLinks
SQres <- as.matrix(SQres)
SQres.jackn <- as.data.frame(SQres.jackn)
SQres.jackn <- t(apply(SQres.jackn, 1, "+", SQres))
phi.mean <- apply(SQres.jackn, 2, mean, na.rm = TRUE)
phi.UCI <- apply(SQres.jackn, 2, sd, na.rm = TRUE)
t.critical = qt(0.975, NLinks-1)
phi.UCI <- phi.mean + t.critical * phi.UCI/sqrt(NLinks)
phi.UCI
par(mar = c(7, 5, 3, 6))
pat.bar <- barplot(sort(phi.mean), names.arg = "", space = 0.2, col="white", ylab= "Squared residuals", ylim=c(0, max(phi.UCI)),cex.lab=1)
segments(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5)
arrows(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5, angle = 90, code = 3, length = 0.05)
abline(a=median(phi.mean), b=0, lty=2)
text(pat.bar, par("usr")[3] - 0.001, srt = 330, adj = 0, labels = rownames(SQres.jackn), xpd = TRUE, font = 3, cex=1, las = 2)
text(22.32, 0.05, '*', cex = 3)
text(25.93, 0.053, '*', cex = 3)
NLinks = 25
SQres <- sort(residuals_paco(D$proc))
SQres.jackn <- SQres**2
SQres <- (residuals (HP.proc)**2)
SQres.jackn <- SQres.jackn*(-(NLinks-1))
SQres.jackn <- SQres.jackn*-1
SQres <- SQres*NLinks
SQres <- as.matrix(SQres)
SQres.jackn <- as.data.frame(SQres.jackn)
SQres.jackn <- t(apply(SQres.jackn, 1, "+", SQres))
phi.mean <- apply(SQres.jackn, 2, mean, na.rm = TRUE)
phi.UCI <- apply(SQres.jackn, 2, sd, na.rm = TRUE)
t.critical = qt(0.975, NLinks-1)
phi.UCI <- phi.mean + t.critical * phi.UCI/sqrt(NLinks)
phi.UCI
par(mar = c(7, 5, 3, 6))
pat.bar <- barplot(sort(phi.mean), names.arg = "", space = 0.2, col="white", ylab= "Squared residuals", ylim=c(0, max(phi.UCI)),cex.lab=1)
segments(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5)
arrows(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5, angle = 90, code = 3, length = 0.05)
abline(a=median(phi.mean), b=0, lty=2)
text(pat.bar, par("usr")[3] - 0.001, srt = 330, adj = 0, labels = rownames(SQres.jackn), xpd = TRUE, font = 3, cex=0.75, las = 2)
text(22.32, 0.05, '*', cex = 3)
text(25.93, 0.053, '*', cex = 3)
NLinks = 25
SQres <- sort(residuals_paco(D$proc))
SQres.jackn <- SQres**2
SQres <- (residuals (HP.proc)**2)
SQres.jackn <- SQres.jackn*(-(NLinks-1))
SQres.jackn <- SQres.jackn*-1
SQres <- SQres*NLinks
SQres <- as.matrix(SQres)
SQres.jackn <- as.data.frame(SQres.jackn)
SQres.jackn <- t(apply(SQres.jackn, 1, "+", SQres))
phi.mean <- apply(SQres.jackn, 2, mean, na.rm = TRUE)
phi.UCI <- apply(SQres.jackn, 2, sd, na.rm = TRUE)
t.critical = qt(0.975, NLinks-1)
phi.UCI <- phi.mean + t.critical * phi.UCI/sqrt(NLinks)
phi.UCI
par(mar = c(7, 5, 3, 6))
pat.bar <- barplot(sort(phi.mean), names.arg = "", space = 0.2, col="white", ylab= "Squared residuals", ylim=c(0, max(phi.UCI)),cex.lab=1)
segments(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5)
arrows(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5, angle = 90, code = 3, length = 0.05)
abline(a=median(phi.mean), b=0, lty=2)
text(pat.bar, par("usr")[3] - 0.001, srt = 330, adj = 0, labels = rownames(SQres.jackn), xpd = TRUE, font = 3, cex=0.7, las = 2)
text(22.32, 0.05, '*', cex = 3)
text(25.93, 0.053, '*', cex = 3)
# Now we see which associations are being valued as cospeciation. To make this look nice, let's highlight these associations on our tanglegram.
svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_PACo_Tanglegram_guerbrown.svg", width = 20, height = 10)
# Here is a recreation of the tanglegram
cophyloplot <- cophyloplot(h, p, hp, show.tip.label = T,
lwd = 4, col = make.transparent("black", 0.3), font = 4,
length.line = 0, gap = -1, space = 135, rotate = F,  align.tip.label = T,
use.edge.length = F, root.edge = T)+
text(5,19.7, "Cynipidae", cex = 1.2)+
text(168, 20.20, "Synergus", cex = 1.2)
# Now, let's plot a red line over the correct associations
x <- c(51, 139)
y <- c(9, 3)
y2 <- c(9, 11)
lines(x, y, col = "firebrick1", lwd = 4)
lines(x, y2, col = "firebrick1", lwd = 4)
dev.off()
svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_PACo_ResBarPlot_guerbrown.svg", width = 20, height = 7.5)
par(mar = c(7, 5, 3, 6))
pat.bar <- barplot(sort(phi.mean), names.arg = "", space = 0.2, col="white", ylab= "Squared residuals", ylim=c(0, max(phi.UCI)),cex.lab=1)
segments(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5)
arrows(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5, angle = 90, code = 3, length = 0.05)
abline(a=median(phi.mean), b=0, lty=2)
text(pat.bar, par("usr")[3] - 0.001, srt = 330, adj = 0, labels = rownames(SQres.jackn), xpd = TRUE, font = 3, cex=0.7, las = 2)
text(22.32, 0.05, '*', cex = 3, col = "firebrick1")
text(25.93, 0.053, '*', cex = 3, col = "firebrick1")
dev.off()
#Association matrix import
assoc <- read.table(assocdata, header = T, sep = ",")
#modifying the association matrix to make it readable by the program
hp <- as.data.frame.matrix(assoc)
#Removing underscores from the labels
h$tip.label <- gsub("_", " ", h$tip.label)
p$tip.label <- gsub("_", " ", p$tip.label)
hp$Gallers <- gsub("_", " ", hp$Galler)
hp$Synergus <- gsub("_", " ", hp$Synergus)
#plotting the tangelgram
cophyloplot <- cophyloplot(h, p, hp, show.tip.label = T,
lwd = 4, col = make.transparent("black", 0.3), font = 4,
length.line = 0, gap = -1, space = 135, rotate = F,  align.tip.label = T,
use.edge.length = F, root.edge = T)+
text(5,19.7, "Cynipidae", cex = 1.5)+
text(168, 20.20, "Synergus", cex = 1.5)
#Association matrix import
assoc <- read.table(assocdata, header = T, sep = ",")
#modifying the association matrix to make it readable by the program
hp <- as.data.frame.matrix(assoc)
#Removing underscores from the labels
h$tip.label <- gsub("_", " ", h$tip.label)
p$tip.label <- gsub("_", " ", p$tip.label)
hp$Gallers <- gsub("_", " ", hp$Galler)
hp$Synergus <- gsub("_", " ", hp$Synergus)
#plotting the tangelgram
cophyloplot <- cophyloplot(h, p, hp, show.tip.label = T,
lwd = 4, col = make.transparent("black", 0.3), font = 4,
length.line = 0, gap = -1, space = 135, rotate = F,  align.tip.label = T,
use.edge.length = F, root.edge = T)+
text(5,19.7, "Cynipini", cex = 1.5)+
text(168, 20.20, "Synergus", cex = 1.5, type = 2)
#Association matrix import
assoc <- read.table(assocdata, header = T, sep = ",")
#modifying the association matrix to make it readable by the program
hp <- as.data.frame.matrix(assoc)
#Removing underscores from the labels
h$tip.label <- gsub("_", " ", h$tip.label)
p$tip.label <- gsub("_", " ", p$tip.label)
hp$Gallers <- gsub("_", " ", hp$Galler)
hp$Synergus <- gsub("_", " ", hp$Synergus)
#plotting the tangelgram
cophyloplot <- cophyloplot(h, p, hp, show.tip.label = T,
lwd = 4, col = make.transparent("black", 0.3), font = 4,
length.line = 0, gap = -1, space = 135, rotate = F,  align.tip.label = T,
use.edge.length = F, root.edge = T)+
text(5,19.7, "Cynipini", cex = 1.5)+
text(168, 20.20, "Synergus", cex = 1.5, font = 3)
#Association matrix import
assoc <- read.table(assocdata, header = T, sep = ",")
#modifying the association matrix to make it readable by the program
hp <- as.data.frame.matrix(assoc)
#Removing underscores from the labels
h$tip.label <- gsub("_", " ", h$tip.label)
p$tip.label <- gsub("_", " ", p$tip.label)
hp$Gallers <- gsub("_", " ", hp$Galler)
hp$Synergus <- gsub("_", " ", hp$Synergus)
#plotting the tangelgram
cophyloplot <- cophyloplot(h, p, hp, show.tip.label = T,
lwd = 4, col = make.transparent("black", 0.3), font = 4,
length.line = 0, gap = -1, space = 135, rotate = F,  align.tip.label = T,
use.edge.length = F, root.edge = T, cex = 1)+
text(5,19.7, "Cynipini", cex = 1.5)+
text(168, 20.20, "Synergus", cex = 1.5, font = 3)
#Association matrix import
assoc <- read.table(assocdata, header = T, sep = ",")
#modifying the association matrix to make it readable by the program
hp <- as.data.frame.matrix(assoc)
#Removing underscores from the labels
h$tip.label <- gsub("_", " ", h$tip.label)
p$tip.label <- gsub("_", " ", p$tip.label)
hp$Gallers <- gsub("_", " ", hp$Galler)
hp$Synergus <- gsub("_", " ", hp$Synergus)
#plotting the tangelgram
cophyloplot <- cophyloplot(h, p, hp, show.tip.label = T,
lwd = 4, col = make.transparent("black", 0.3), font = 4,
length.line = 0, gap = -1, space = 135, rotate = F,  align.tip.label = T,
use.edge.length = F, root.edge = T, cex = 1.4)+
text(5,19.7, "Cynipini", cex = 1.5)+
text(168, 20.20, "Synergus", cex = 1.5, font = 3)
#Association matrix import
assoc <- read.table(assocdata, header = T, sep = ",")
#modifying the association matrix to make it readable by the program
hp <- as.data.frame.matrix(assoc)
#Removing underscores from the labels
h$tip.label <- gsub("_", " ", h$tip.label)
p$tip.label <- gsub("_", " ", p$tip.label)
hp$Gallers <- gsub("_", " ", hp$Galler)
hp$Synergus <- gsub("_", " ", hp$Synergus)
#plotting the tangelgram
cophyloplot <- cophyloplot(h, p, hp, show.tip.label = T,
lwd = 4, col = make.transparent("black", 0.3), font = 4,
length.line = 0, gap = -1, space = 135, rotate = F,  align.tip.label = T,
use.edge.length = F, root.edge = T, cex = 3)+
text(5,19.7, "Cynipini", cex = 1.5)+
text(168, 20.20, "Synergus", cex = 1.5, font = 3)
# Now we see which associations are being valued as cospeciation. To make this look nice, let's highlight these associations on our tanglegram.
svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_PACo_Tanglegram_guerbrown.svg", width = 20, height = 10)
# Here is a recreation of the tanglegram
cophyloplot <- cophyloplot(h, p, hp, show.tip.label = T,
lwd = 4, col = make.transparent("black", 0.3), font = 4,
length.line = 0, gap = -1, space = 135, rotate = F,  align.tip.label = T,
use.edge.length = F, root.edge = T, cex = 3)+
text(5,19.7, "Cynipini", cex = 1.5)+
text(168, 20.20, "Synergus", cex = 1.5, font = 3)
# Now, let's plot a red line over the correct associations
x <- c(51, 139)
y <- c(9, 3)
y2 <- c(9, 11)
lines(x, y, col = "firebrick1", lwd = 4)
lines(x, y2, col = "firebrick1", lwd = 4)
dev.off()
svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_PACo_ResBarPlot_guerbrown.svg", width = 20, height = 7.5)
par(mar = c(7, 5, 3, 6))
pat.bar <- barplot(sort(phi.mean), names.arg = "", space = 0.2, col="white", ylab= "Squared residuals", ylim=c(0, max(phi.UCI)),cex.lab=1)
segments(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5)
arrows(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5, angle = 90, code = 3, length = 0.05)
abline(a=median(phi.mean), b=0, lty=2)
text(pat.bar, par("usr")[3] - 0.001, srt = 330, adj = 0, labels = rownames(SQres.jackn), xpd = TRUE, font = 3, cex=0.69, las = 2)
text(22.32, 0.05, '*', cex = 3, col = "firebrick1")
text(25.93, 0.053, '*', cex = 3, col = "firebrick1")
dev.off()
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(phytools)
library(geiger)
library(expm)
library(lmtest)
setwd("//wsl.localhost/Ubuntu/home/guerbrown/github_local/biol-4386-course-project-guerbrown/data/TraitModeling")
tree <- "//wsl.localhost/Ubuntu/home/guerbrown/github_local/biol-4386-course-project-guerbrown/data/TraitModeling/inqcophy_traitmodeling_SynTree_guerbrown.nex"
traits <- "//wsl.localhost/Ubuntu/home/guerbrown/github_local/biol-4386-course-project-guerbrown/data/TraitModeling/inqcophy_traitmodeling_TraitData_guerbrown.csv"
# Import
S <- readNexus(tree)
# Rooting the phylogeny based on a version of the tree with an outgroup and plotting
root.phylo(S, 28, resolve.root = T)
# Importing the .csv file with our traits
data <- read.csv(traits, row.names = 1)
#move the data from one column into a simple matrix with the row names
oaksection <- setNames(data$oak_section, rownames(data))
#here is the previous step visualized
oaksection
#set up your models, take time to check before running. To hide the fitted model, use quiet = T. Here I have left one fit visible but will hide the remaining fits.
oaksection.ER <- fitpolyMk(tree, oaksection, model = "ER")
# Import
tree <- readNexus(tree)
# Rooting the phylogeny based on a version of the tree with an outgroup and plotting
root.phylo(tree, 28, resolve.root = T)
# Importing the .csv file with our traits
data <- read.csv(traits, row.names = 1)
#move the data from one column into a simple matrix with the row names
oaksection <- setNames(data$oak_section, rownames(data))
#here is the previous step visualized
oaksection
#set up your models, take time to check before running. To hide the fitted model, use quiet = T. Here I have left one fit visible but will hide the remaining fits.
oaksection.ER <- fitpolyMk(tree, oaksection, model = "ER")
oaksection.SYM <- fitpolyMk(tree, oaksection, model = "SYM", quiet = T)
oaksection.ARD <- fitpolyMk(tree, oaksection, model = "ARD", quiet = T)
oaksection.transient <- fitpolyMk(tree, oaksection, model = "transient", quiet = T)
#Create a table to compare the models
data.frame(model = c("ER", "SYM", "ARD", "transient"),
logLik = c(logLik(oaksection.ER), logLik(oaksection.SYM),
logLik(oaksection.ARD), logLik(oaksection.transient)),
k = c(attr(logLik(oaksection.ER), "df"),
attr(logLik(oaksection.SYM), "df"),
attr(logLik(oaksection.ARD), "df"),
attr(logLik(oaksection.transient), "df")),
AIC = aic <- c(AIC(oaksection.ER), AIC(oaksection.SYM),
AIC(oaksection.ARD), AIC(oaksection.transient)),
weight = unclass(aic.w(aic)))
#To help anyone else interpret this, the aic value represents the
plot(oaksection.ER)
