knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(phytools)
library(geiger)
library(corHMM)
setwd("//wsl.localhost/Ubuntu/home/guerbrown/github_local/biol-4386-course-project-guerbrown/data/TraitModeling")
tree <- "//wsl.localhost/Ubuntu/home/guerbrown/github_local/biol-4386-course-project-guerbrown/data/TraitModeling/inqcophy_traitmodeling_SynTree_guerbrown.nex"
traits <- "//wsl.localhost/Ubuntu/home/guerbrown/github_local/biol-4386-course-project-guerbrown/data/TraitModeling/inqcophy_traitmodeling_TraitData_guerbrown.csv"
#Import
S <- readNexus(tree)
#Rooting the phylogeny based on a version of the tree with an outgroup and plotting
root.phylo(S, 1, resolve.root = T)
plot.phylo(S, align.tip.label = T, use.edge.length = F, root.edge = T)
data <- read.csv(traits, row.names = 1)
#Import
S <- readNexus(tree)
#Rooting the phylogeny based on a version of the tree with an outgroup and plotting
root.phylo(S, 1, resolve.root = T)
data <- read.csv(traits, row.names = 1)
oaksection <- setNames(data$oak_section, rownames(data))
# Rename the levels of the variable
levels(oaksection) <- unique(data$oak_section)
# Recapitulation of the best fit model
fitER <- ace(oaksection, S, model = "ER", type = "discrete")
S$tip.label
data$oak_section
oaksection <- setNames(data$oak_section, rownames(data))
# Rename the levels of the variable
levels(oaksection) <- unique(data$oak_section)
# Recapitulation of the best fit model
fitER <- ace(oaksection, S, model = "ER", type = "discrete")
svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_traitmodeling_OakSectionRecon_guerbrown.svg", width = 20, height = 10)
cols1 <- c("red", "blue", "green", "black")
plot.phylo(S, type = "fan", cex = 2, align.tip.label = F, lwd = 3.5, label.offset = 0.1, use.edge.length = F, open.angle =  165)
sectiontotree <- setNames(data$oak_section, data$Synergus)
xx <- strsplit(as.character(sectiontotree), split = "+", fixed = T)
pp <- matrix(0, length(sectiontotree), 3, dimnames = list(names(sectiontotree), c("Quercus", "Lobatae","Virentes")))
for (i in 1:nrow(pp)) pp[i,xx[[i]]]<-1/length(xx[[i]])
par(fg = "transparent")
ape::tiplabels(pie = pp, piecol = , cex = 0.15)
par(fg = "black")
tiplabels(pie = to.matrix(oaksection, sort(unique(oaksection))),piecol = cols1, cex = 0.15)
nodelabels( node = 1:S$Nnode+Ntip(S),
pie = fitER$lik.anc, piecol = cols1, cex=0.25)
tiplabels(pie = to.matrix(oaksection,sort(unique(oaksection))), piecol = cols1, cex = 0.15)
legend("left", c("Lobatae","Quercus", "Virentes", "Quercus+Virentes"), pch = 21, pt.bg = c("red", "blue", "green", "black"), pt.cex = 3, title = "Oak Section", cex = 1.5)
dev.off()
cynipgen <- setNames(data$cynip_generation, rownames(data))
# Rename the levels of the variable
levels(cynipgen) <- unique(data$cynip_generation)
# Recapitulation of the best fit model
cynipgen.ER <- fitpolyMk(S, cynipgen, model = "ER")
#pull states off the fitted model object
xx2 <- apply(cynipgen.ER$data,1,
function(x,ss) ss[which(x==1)],
ss=colnames(cynipgen.ER$data))
#corHMM does not like to work with + so let's replace those with /
xx2<-gsub("+","/",xx2,fixed=TRUE)
#xx<-gsub("+","/",xx,fixed=TRUE)
#build corHMM data frame
gen.data <- data.frame(Genus_sp = names(xx2), cynipgen = xx2)
gen.data
#Pull out model design matrix from the fitted object
rate.mat2 <- cynipgen.ER$index.matrix
rate.mat2[rate.mat2==0] <- NA
colnames(rate.mat2) <- rownames(rate.mat2) <- gsub("+","/",
colnames(rate.mat2),fixed=TRUE)
ind <- order(colnames(rate.mat2))
rate.mat <- rate.mat2[ind,ind]
cynipgen.ER$rates
#Ancestral States
fit.marginal2<-corHMM(S,gen.data,
rate.mat=rate.mat2,
node.states="marginal",
rate.cat=1,p=cynipgen.ER$rates,
root.p=cynipgen.ER$pi)
fit.marginal2$states
#Marginal states are stores in $states. Extract this and ensure the model is consistent
asr2<-fit.marginal2$states
colnames(asr2)<-colnames(rate.mat)
colnames(asr2)<-gsub("/","+",colnames(asr2))
asr2
cynipgen <- setNames(data$cynip_generation, rownames(data))
# Rename the levels of the variable
levels(cynipgen) <- unique(data$cynip_generation)
# Recapitulation of the best fit model
cynipgen.ER <- fitpolyMk(S, cynipgen, model = "ER")
#pull states off the fitted model object
xx2 <- apply(cynipgen.ER$data,1,
function(x,ss) ss[which(x==1)],
ss=colnames(cynipgen.ER$data))
#corHMM does not like to work with + so let's replace those with /
xx2<-gsub("+","/",xx2,fixed=TRUE)
#xx<-gsub("+","/",xx,fixed=TRUE)
#build corHMM data frame
gen.data <- data.frame(Genus_sp = names(xx2), cynipgen = xx2)
gen.data
#Pull out model design matrix from the fitted object
rate.mat2 <- cynipgen.ER$index.matrix
rate.mat2[rate.mat2==0] <- NA
colnames(rate.mat2) <- rownames(rate.mat2) <- gsub("+","/",
colnames(rate.mat2),fixed=TRUE)
ind <- order(colnames(rate.mat2))
rate.mat <- rate.mat2[ind,ind]
cynipgen.ER$rates
#Ancestral States
fit.marginal2<-corHMM(S,gen.data,
rate.mat=rate.mat2,
node.states="marginal",
rate.cat=1,p=cynipgen.ER$rates,
root.p=cynipgen.ER$pi)
fit.marginal2$states
#Marginal states are stores in $states. Extract this and ensure the model is consistent
asr2<-fit.marginal2$states
colnames(asr2)<-colnames(rate.mat)
colnames(asr2)<-gsub("/","+",colnames(asr2))
asr2
#svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_traitmodeling_CynipGenRecon_guerbrown.svg", width = 20, height = 10)
pp2 <- matrix(0, length(cynipgen), 3, dimnames = list(names(cynipgen), c("Asexual", "Sexual", "Asexual+Sexual")))
plot.phylo(S, type = "fan", cex = 2, align.tip.label = F, lwd = 3.5, label.offset = 0.1, use.edge.length = F, open.angle =  165)
X<-strsplit(setNames(as.character(rate.mat2),names(rate.mat2)),"+", fixed=TRUE)
pies<-matrix(0,Ntip(S),2,
dimnames=list(S$tip.label,
c("Asexual","Sexual")))
for(i in 1:Ntip(S))
pies[S$tip.label[i],
X[[S$tip.label[i]]]]<-
rep(1/length(X[[S$tip.label[i]]]),
length(X[[S$tip.label[i]]]))
cols2 <- setNames(c("blue", "red", "yellow"),
c("Asexual", "Sexual"))
par(fg="black")
pp2 <- matrix(0, length(cynipgen), 3, dimnames = list(names(cynipgen), c("Asexual", "Sexual", "Asexual+Sexual")))
tiplabels(pie=pp2,piecol=cols2,cex=0.15)
#svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_traitmodeling_CynipGenRecon_guerbrown.svg", width = 20, height = 10)
pp2 <- matrix(0, length(cynipgen), 3, dimnames = list(names(cynipgen), c("Asexual", "Sexual", "Asexual+Sexual")))
plot.phylo(S, type = "fan", cex = 2, align.tip.label = F, lwd = 3.5, label.offset = 0.1, use.edge.length = F, open.angle =  165)
X<-strsplit(setNames(as.character(rate.mat2),names(rate.mat2)),"+", fixed=TRUE)
pies<-matrix(0,Ntip(S),2,
dimnames=list(S$tip.label,
c("Asexual","Sexual")))
for(i in 1:Ntip(S))
pies[S$tip.label[i],
X[[S$tip.label[i]]]]<-
rep(1/length(X[[S$tip.label[i]]]),
length(X[[S$tip.label[i]]]))
cols2 <- setNames(c("blue", "red", "yellow"),
c("Asexual", "Sexual"))
par(fg="black")
pp2 <- matrix(0, length(cynipgen), 3, dimnames = list(names(cynipgen), c("Asexual", "Sexual", "Asexual+Sexual")))
tiplabels(pie=pp,piecol=cols2,cex=0.15)
par(fg="black")
piecol<-cols2
for(i in 1:ncol(asr2)){
nn2<-strsplit(colnames(asr2)[i],"+",fixed=TRUE)[[1]]
if(length(nn)==1) piecol[i]<-cols[nn]
else if(length(nn2)==2) piecol[i]<-colorRampPalette(cols[nn2])(3)[2]
else piecol[i]<-"black"
}
pp2 <- matrix(0, length(cynipgen), 3, dimnames = list(names(cynipgen), c("Asexual", "Sexual", "Asexual+Sexual")))
#dev.off()
pp2
tiplabels(pie=pp2,piecol=cols2,cex=0.15)
pp2 <- matrix(0, length(cynipgen), 3, dimnames = list(names(cynipgen), c("Asexual", "Sexual", "Asexual+Sexual")))
#svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_traitmodeling_CynipGenRecon_guerbrown.svg", width = 20, height = 10)
pp2 <- matrix(0, length(cynipgen), 3, dimnames = list(names(cynipgen), c("Asexual", "Sexual", "Asexual+Sexual")))
plot.phylo(S, type = "fan", cex = 2, align.tip.label = F, lwd = 3.5, label.offset = 0.1, use.edge.length = F, open.angle =  165)
X<-strsplit(setNames(as.character(rate.mat2),names(rate.mat2)),"+", fixed=TRUE)
pies<-matrix(0,Ntip(S),2,
dimnames=list(S$tip.label,
c("Asexual","Sexual")))
for(i in 1:Ntip(S))
pies[S$tip.label[i],
X[[S$tip.label[i]]]]<-
rep(1/length(X[[S$tip.label[i]]]),
length(X[[S$tip.label[i]]]))
cols2 <- setNames(c("blue", "red", "yellow"),
c("Asexual", "Sexual"))
par(fg="black")
pp2 <- matrix(0, length(cynipgen), 3, dimnames = list(names(cynipgen), c("Asexual", "Sexual", "Asexual+Sexual")))
tiplabels(pie=pp2,piecol=cols2,cex=0.15)
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(phytools)
library(geiger)
library(corHMM)
setwd("//wsl.localhost/Ubuntu/home/guerbrown/github_local/biol-4386-course-project-guerbrown/data/TraitModeling")
tree <- "//wsl.localhost/Ubuntu/home/guerbrown/github_local/biol-4386-course-project-guerbrown/data/TraitModeling/inqcophy_traitmodeling_SynTree_guerbrown.nex"
traits <- "//wsl.localhost/Ubuntu/home/guerbrown/github_local/biol-4386-course-project-guerbrown/data/TraitModeling/inqcophy_traitmodeling_TraitData_guerbrown.csv"
#Import
S <- readNexus(tree)
#Rooting the phylogeny based on a version of the tree with an outgroup and plotting
root.phylo(S, 1, resolve.root = T)
data <- read.csv(traits, row.names = 1)
oaksection <- setNames(data$oak_section, rownames(data))
# Rename the levels of the variable
levels(oaksection) <- unique(data$oak_section)
# Recapitulation of the best fit model
fitER <- ace(oaksection, S, model = "ER", type = "discrete")
svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_traitmodeling_OakSectionRecon_guerbrown.svg", width = 20, height = 10)
cols1 <- c("red", "blue", "green", "black")
plot.phylo(S, type = "fan", cex = 2, align.tip.label = F, lwd = 3.5, label.offset = 0.1, use.edge.length = F, open.angle =  165)
sectiontotree <- setNames(data$oak_section, data$Synergus)
xx <- strsplit(as.character(sectiontotree), split = "+", fixed = T)
pp <- matrix(0, length(sectiontotree), 3, dimnames = list(names(sectiontotree), c("Quercus", "Lobatae","Virentes")))
for (i in 1:nrow(pp)) pp[i,xx[[i]]]<-1/length(xx[[i]])
par(fg = "transparent")
ape::tiplabels(pie = pp, piecol = , cex = 0.15)
par(fg = "black")
tiplabels(pie = to.matrix(oaksection, sort(unique(oaksection))),piecol = cols1, cex = 0.15)
nodelabels( node = 1:S$Nnode+Ntip(S),
pie = fitER$lik.anc, piecol = cols1, cex=0.25)
tiplabels(pie = to.matrix(oaksection,sort(unique(oaksection))), piecol = cols1, cex = 0.15)
legend("left", c("Lobatae","Quercus", "Virentes", "Quercus+Virentes"), pch = 21, pt.bg = c("red", "blue", "green", "black"), pt.cex = 3, title = "Oak Section", cex = 1.5)
dev.off()
cynipgen <- setNames(data$cynip_generation, rownames(data))
# Rename the levels of the variable
levels(cynipgen) <- unique(data$cynip_generation)
# Recapitulation of the best fit model
cynipgen.ER <- fitpolyMk(S, cynipgen, model = "ER")
#pull states off the fitted model object
xx2 <- apply(cynipgen.ER$data,1,
function(x,ss) ss[which(x==1)],
ss=colnames(cynipgen.ER$data))
#corHMM does not like to work with + so let's replace those with /
xx2<-gsub("+","/",xx2,fixed=TRUE)
#xx<-gsub("+","/",xx,fixed=TRUE)
#build corHMM data frame
gen.data <- data.frame(Genus_sp = names(xx2), cynipgen = xx2)
gen.data
#Pull out model design matrix from the fitted object
rate.mat2 <- cynipgen.ER$index.matrix
rate.mat2[rate.mat2==0] <- NA
colnames(rate.mat2) <- rownames(rate.mat2) <- gsub("+","/",
colnames(rate.mat2),fixed=TRUE)
ind <- order(colnames(rate.mat2))
rate.mat <- rate.mat2[ind,ind]
cynipgen.ER$rates
#Ancestral States
fit.marginal2<-corHMM(S,gen.data,
rate.mat=rate.mat2,
node.states="marginal",
rate.cat=1,p=cynipgen.ER$rates,
root.p=cynipgen.ER$pi)
fit.marginal2$states
#Marginal states are stores in $states. Extract this and ensure the model is consistent
asr2<-fit.marginal2$states
colnames(asr2)<-colnames(rate.mat)
colnames(asr2)<-gsub("/","+",colnames(asr2))
asr2
#svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_traitmodeling_CynipGenRecon_guerbrown.svg", width = 20, height = 10)
pp2 <- matrix(0, length(cynipgen), 3, dimnames = list(names(cynipgen), c("Asexual", "Sexual", "Asexual+Sexual")))
plot.phylo(S, type = "fan", cex = 2, align.tip.label = F, lwd = 3.5, label.offset = 0.1, use.edge.length = F, open.angle =  165)
X<-strsplit(setNames(as.character(rate.mat2),names(rate.mat2)),"+", fixed=TRUE)
pies<-matrix(0,Ntip(S),2,
dimnames=list(S$tip.label,
c("Asexual","Sexual")))
for(i in 1:Ntip(S))
pies[S$tip.label[i],
X[[S$tip.label[i]]]]<-
rep(1/length(X[[S$tip.label[i]]]),
length(X[[S$tip.label[i]]]))
cols2 <- setNames(c("blue", "red", "yellow"),
c("Asexual", "Sexual"))
par(fg="black")
pp2 <- matrix(0, length(cynipgen), 3, dimnames = list(names(cynipgen), c("Asexual", "Sexual", "Asexual+Sexual")))
tiplabels(pie=pp2,piecol=cols2,cex=0.15)
pp2 <- matrix(0, length(cynipgen), 3, dimnames = list(names(cynipgen), c("Asexual", "Sexual", "Asexual+Sexual")))
pp
pp2 <- matrix(0, length(cynipgen), 4, dimnames = list(names(cynipgen), c("Asexual", "Sexual", "Asexual+Sexual")))
pp2 <- matrix(1, length(cynipgen), 4, dimnames = list(names(cynipgen), c("Asexual", "Sexual", "Asexual+Sexual")))
3
pp <- matrix(0, length(cynipgen), 3, dimnames = list(names(cynipgen), c("Quercus", "Lobatae","Virentes")))
#dev.off()
pp
#svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_traitmodeling_MPRecon_guerbrown.svg", width = 20, height = 10)
gentotree <- setNames(data$cynip_generation, data$Synergus)
plot.phylo(S, type = "fan", cex = 2, align.tip.label = F, lwd = 3.5, label.offset = 0.1, use.edge.length = F, open.angle =  165)
X<-strsplit(setNames(as.character(rate.mat),names(rate.mat)),"+", fixed=TRUE)
pies<-matrix(0,Ntip(S),2,
dimnames=list(S$tip.label,
c("Monothalamous","Polythalamous")))
for(i in 1:Ntip(S))
pies[S$tip.label[i],
X[[S$tip.label[i]]]]<-
rep(1/length(X[[S$tip.label[i]]]),
length(X[[S$tip.label[i]]]))
cols2 <- setNames(c("blue", "red", "yellow"),
c("Monothalamous","Polythalamous"))
par(fg="black")
tiplabels(pie=pp,piecol=cols2,cex=0.15)
#svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_traitmodeling_CynipGenRecon_guerbrown.svg", width = 20, height = 10)
plot.phylo(S, type = "fan", cex = 2, align.tip.label = F, lwd = 3.5, label.offset = 0.1, use.edge.length = F, open.angle =  165)
X<-strsplit(setNames(as.character(rate.mat2),names(rate.mat2)),"+", fixed=TRUE)
pies<-matrix(0,Ntip(S),2,
dimnames=list(S$tip.label,
c("Asexual","Sexual")))
for(i in 1:Ntip(S))
pies[S$tip.label[i],
X[[S$tip.label[i]]]]<-
rep(1/length(X[[S$tip.label[i]]]),
length(X[[S$tip.label[i]]]))
cols2 <- setNames(c("blue", "red", "yellow"),
c("Asexual", "Sexual"))
par(fg="black")
gentotree <- setNames(data$cynip_generation, data$Synergus)
pp <- matrix(0, length(gentotree), 3, dimnames = list(names(gentotree), c("Asexual", "Sexual", "Asexual+Sexual")))
tiplabels(pie=pp2,piecol=cols2,cex=0.15)
#svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_traitmodeling_CynipGenRecon_guerbrown.svg", width = 20, height = 10)
plot.phylo(S, type = "fan", cex = 2, align.tip.label = F, lwd = 3.5, label.offset = 0.1, use.edge.length = F, open.angle =  165)
X<-strsplit(setNames(as.character(rate.mat2),names(rate.mat2)),"+", fixed=TRUE)
pies<-matrix(0,Ntip(S),2,
dimnames=list(S$tip.label,
c("Asexual","Sexual")))
for(i in 1:Ntip(S))
pies[S$tip.label[i],
X[[S$tip.label[i]]]]<-
rep(1/length(X[[S$tip.label[i]]]),
length(X[[S$tip.label[i]]]))
cols2 <- setNames(c("blue", "red", "yellow"),
c("Asexual", "Sexual"))
par(fg="black")
gentotree <- setNames(data$cynip_generation, data$Synergus)
pp2 <- matrix(0, length(gentotree), 3, dimnames = list(names(gentotree), c("Asexual", "Sexual", "Asexual+Sexual")))
tiplabels(pie=pp2,piecol=cols2,cex=0.15)
#dev.off()
pp2
gentotree <- setNames(data$cynip_generation, data$Synergus)
pp2 <- matrix(0, length(gentotree), 3, dimnames = list(names(gentotree), c("Asexual", "Sexual", "Asexual+Sexual")))
#dev.off()
pp2
