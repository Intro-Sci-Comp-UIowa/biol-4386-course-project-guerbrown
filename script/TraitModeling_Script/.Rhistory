texture_rate.mat[texture_rate.mat==0] <- NA
colnames(texture_rate.mat) <- rownames(texture_rate.mat) <- gsub("+","/", colnames(texture_rate.mat), fixed=TRUE)
textureind <- order(colnames(texture_rate.mat))
texture_rate.mat <- texture_rate.mat[textureind, textureind]
texture_fit.marginal <- corHMM(S, texture.data,
rate.mat = texture_rate.mat,
node.states = "marginal",
rate.cat = 1, p = texture.ER$rates,
root.p = texture.ER$pi)
textureasr <- texture_fit.marginal$states
colnames(textureasr) <- colnames(texture_rate.mat)
colnames(textureasr) <- gsub("/","+", colnames(textureasr))
#svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_traitmodeling_texture_guerbrown.svg", width = 20, height = 10)
texturepp <- matrix(0, length(texture), 3, dimnames = list(names(texture), c("0", "1", "1+0")))
plot.phylo(S, type = "fan", cex = 1.1, align.tip.label = F, lwd = 2, label.offset = 0.05, use.edge.length = F, open.angle =  163, node.depth = 100)
textureX <- strsplit(setNames(as.character(texture_rate.mat), names(texture_rate.mat)),"+", fixed=TRUE)
pies <- matrix(0, Ntip(S),3,
dimnames=list(S$tip.label,
c("0", "1", "1+0")))
for(i in 1:Ntip(S))
pies[S$tip.label[i],
textureX[[S$tip.label[i]]]]<-
rep(1/length(textureX[[S$tip.label[i]]]),
length(textureX[[S$tip.label[i]]]))
texturecols <- setNames(c("firebrick1", "dodgerblue1"),
c("0", "1"))
par(fg="white")
texture <- setNames(data$texture, data$Synergus)
texturexx <- strsplit(as.character(texture), split = "+", fixed = T)
texturepp <- matrix(0, length(texture), 3, dimnames = list(names(texture), c("0", "1", "1+0")))
for (i in 1:nrow(texturepp)) texturepp[i,texturexx[[i]]]<-1/length(texturexx[[i]])
tiplabels(pie = texturepp, piecol = texturecols, cex=0.3)
par(fg="white")
piecol <- texturecols
for(i in 1:ncol(textureasr)){
texturenn <- strsplit(colnames(textureasr)[i],"+", fixed=TRUE)[[1]]
if(length(texturenn)==1) piecol[i] <- texturecols[texturenn]
else if(length(texturenn)==2) piecol[i] <- colorRampPalette(texturecols[texturenn])(3)[2]
else piecol[i]<-"black"
}
names(piecol)<-colnames(textureasr)
par(fg="white")
nodelabels(pie = textureasr, piecol = texturecols,cex=0.40)
par(fg="black")
legend("bottom", c("No Texture", "Textured"), pch = 21, pt.bg = c("firebrick1", "dodgerblue1"), pt.cex = 2, title = "Texture", cex = 1)
#dev.off()
hairs <- setNames(data$hairs, rownames(data))
levels(hairs) <- unique(data$hairs)
hairs.ER <- fitpolyMk(S, hairs, model = "ER")
hairsxx <- apply(hairs.ER$data,1,
function(x,ss) ss[which(x==1)],
ss=colnames(hairs.ER$data))
hairsxx <- gsub("+","/", hairsxx, fixed=TRUE)
hairs.data <- data.frame(Genus_sp = names(hairsxx), hairs = hairsxx)
hairs_rate.mat <- hairs.ER$index.matrix
hairs_rate.mat[hairs_rate.mat==0] <- NA
colnames(hairs_rate.mat) <- rownames(hairs_rate.mat) <- gsub("+","/", colnames(hairs_rate.mat), fixed=TRUE)
hairsind <- order(colnames(hairs_rate.mat))
hairs_rate.mat <- hairs_rate.mat[hairsind, hairsind]
hairs_fit.marginal <- corHMM(S, hairs.data,
rate.mat = hairs_rate.mat,
node.states = "marginal",
rate.cat = 1, p = hairs.ER$rates,
root.p = hairs.ER$pi)
hairsasr <- hairs_fit.marginal$states
colnames(hairsasr) <- colnames(hairs_rate.mat)
colnames(hairsasr) <- gsub("/","+", colnames(hairsasr))
svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_traitmodeling_hairs_guerbrown.svg", width = 20, height = 10)
hairspp <- matrix(0, length(hairs), 3, dimnames = list(names(hairs), c("0", "1", "1+0")))
plot.phylo(S, type = "fan", cex = 1.1, align.tip.label = F, lwd = 2, label.offset = 0.05, use.edge.length = F, open.angle =  163, node.depth = 100)
hairsX <- strsplit(setNames(as.character(hairs_rate.mat), names(hairs_rate.mat)),"+", fixed=TRUE)
pies <- matrix(0, Ntip(S),2,
dimnames=list(S$tip.label,
c("0", "1")))
for(i in 1:Ntip(S))
pies[S$tip.label[i],
hairsX[[S$tip.label[i]]]]<-
rep(1/length(hairsX[[S$tip.label[i]]]),
length(hairsX[[S$tip.label[i]]]))
hairscols <- setNames(c("firebrick1", "dodgerblue1", "grey15"),
c("0", "1"))
par(fg="white")
hairs <- setNames(data$hairs, data$Synergus)
hairsxx <- strsplit(as.character(hairs), split = "+", fixed = T)
hairspp <- matrix(0, length(hairs), 3, dimnames = list(names(hairs), c("0", "1", "1+0")))
for (i in 1:nrow(hairspp)) hairspp[i,hairsxx[[i]]]<-1/length(hairsxx[[i]])
tiplabels(pie = hairspp, piecol = hairscols, cex=0.3)
par(fg="white")
piecol <- hairscols
for(i in 1:ncol(hairsasr)){
hairsnn <- strsplit(colnames(hairsasr)[i],"+", fixed=TRUE)[[1]]
if(length(hairsnn)==1) piecol[i] <- hairscols[hairsnn]
else if(length(hairsnn)==2) piecol[i] <- colorRampPalette(hairscols[hairsnn])(3)[2]
else piecol[i]<-"black"
}
names(piecol)<-colnames(hairsasr)
par(fg="white")
nodelabels(pie = hairsasr, piecol = hairscols,cex=0.40)
par(fg="black")
legend("bottom", c("Hairless", "Hairy"), pch = 21, pt.bg = c("firebrick1", "dodgerblue1"), pt.cex = 2, cex = 1)
dev.off()
svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_traitmodeling_wool_guerbrown.svg", width = 20, height = 10)
wool <- setNames(data$wool, rownames(data))
levels(wool) <- unique(data$wool)
wool.ER <- ace(wool, S, model = "ER", type = "discrete")
woolcols <- c("firebrick1", "dodgerblue1")
plot.phylo(S, type = "fan", cex = 1.1, align.tip.label = F, lwd = 2, label.offset = 0.05, use.edge.length = F, open.angle =  163, node.depth = 100)
wool_DATA <- setNames(data$wool, data$Synergus)
woolxx <- strsplit(as.character(wool_DATA), split = "+", fixed = T)
woolpp <- matrix(0, length(wool_DATA), 2, dimnames = list(names(wool_DATA), c("0", "1")))
for (i in 1:nrow(woolpp)) woolpp[i,woolxx[[i]]]<-1/length(woolxx[[i]])
par(fg = "transparent")
ape::tiplabels(pie = woolpp, piecol = woolcols, cex = 0.15)
par(fg = "white")
tiplabels(pie = to.matrix(wool, sort(unique(wool))),piecol = woolcols, cex = 0.3)
nodelabels( node = 1:S$Nnode+Ntip(S),
pie = wool.ER$lik.anc, piecol = woolcols, cex=0.4)
tiplabels(pie = to.matrix(wool, sort(unique(wool))), piecol = woolcols, cex = 0.3)
par(fg = "black")
legend("bottom", c("Not Wooly", "Wooly"), pch = 21, pt.bg = c("firebrick1", "dodgerblue1"), pt.cex = 2, cex = 1)
dev.off()
nectar <- setNames(data$nectar, rownames(data))
levels(nectar) <- unique(data$nectar)
nectar.ER <- fitpolyMk(S, nectar, model = "ER")
nectarxx <- apply(nectar.ER$data,1,
function(x,ss) ss[which(x==1)],
ss=colnames(nectar.ER$data))
nectarxx <- gsub("+","/", nectarxx, fixed=TRUE)
nectar.data <- data.frame(Genus_sp = names(nectarxx), nectar = nectarxx)
nectar_rate.mat <- nectar.ER$index.matrix
nectar_rate.mat[nectar_rate.mat==0] <- NA
colnames(nectar_rate.mat) <- rownames(nectar_rate.mat) <- gsub("+","/", colnames(nectar_rate.mat), fixed=TRUE)
nectarind <- order(colnames(nectar_rate.mat))
nectar_rate.mat <- nectar_rate.mat[nectarind, nectarind]
nectar_fit.marginal <- corHMM(S, nectar.data,
rate.mat = nectar_rate.mat,
node.states = "marginal",
rate.cat = 1, p = nectar.ER$rates,
root.p = nectar.ER$pi)
nectarasr <- nectar_fit.marginal$states
colnames(nectarasr) <- colnames(nectar_rate.mat)
colnames(nectarasr) <- gsub("/","+", colnames(nectarasr))
svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_traitmodeling_nectar_guerbrown.svg", width = 20, height = 10)
nectarpp <- matrix(0, length(nectar), 3, dimnames = list(names(nectar), c("0", "1", "1+0")))
plot.phylo(S, type = "fan", cex = 1.1, align.tip.label = F, lwd = 2, label.offset = 0.05, use.edge.length = F, open.angle =  163, node.depth = 100)
nectarX <- strsplit(setNames(as.character(nectar_rate.mat), names(nectar_rate.mat)),"+", fixed=TRUE)
pies <- matrix(0, Ntip(S),2,
dimnames=list(S$tip.label,
c("0", "1")))
for(i in 1:Ntip(S))
pies[S$tip.label[i],
nectarX[[S$tip.label[i]]]]<-
rep(1/length(nectarX[[S$tip.label[i]]]),
length(nectarX[[S$tip.label[i]]]))
nectarcols <- setNames(c("firebrick1", "dodgerblue1"),
c("0", "1"))
par(fg="white")
nectar <- setNames(data$nectar, data$Synergus)
nectarxx <- strsplit(as.character(nectar), split = "+", fixed = T)
nectarpp <- matrix(0, length(nectar), 3, dimnames = list(names(nectar), c("0", "1", "1+0")))
for (i in 1:nrow(nectarpp)) nectarpp[i,nectarxx[[i]]]<-1/length(nectarxx[[i]])
tiplabels(pie = nectarpp, piecol = nectarcols, cex=0.3)
par(fg="white")
piecol <- nectarcols
for(i in 1:ncol(nectarasr)){
nectarnn <- strsplit(colnames(nectarasr)[i],"+", fixed=TRUE)[[1]]
if(length(nectarnn)==1) piecol[i] <- nectarcols[nectarnn]
else if(length(nectarnn)==2) piecol[i] <- colorRampPalette(nectarcols[nectarnn])(3)[2]
else piecol[i]<-"black"
}
names(piecol)<-colnames(nectarasr)
par(fg="white")
nodelabels(pie = nectarasr, piecol = nectarcols,cex=0.40)
par(fg="black")
legend("bottom", c("Nectarless", "Produces Nectar"), pch = 21, pt.bg = c("firebrick1", "dodgerblue1"), pt.cex = 2, cex = 1)
dev.off()
fiber <- setNames(data$fiber, rownames(data))
levels(fiber) <- unique(data$fiber)
fiber.ER <- fitpolyMk(S, fiber, model = "ER")
fiberxx <- apply(fiber.ER$data,1,
function(x,ss) ss[which(x==1)],
ss=colnames(fiber.ER$data))
fiberxx <- gsub("+","/", fiberxx, fixed=TRUE)
fiber.data <- data.frame(Genus_sp = names(fiberxx), fiber = fiberxx)
fiber_rate.mat <- fiber.ER$index.matrix
fiber_rate.mat[fiber_rate.mat==0] <- NA
colnames(fiber_rate.mat) <- rownames(fiber_rate.mat) <- gsub("+","/", colnames(fiber_rate.mat), fixed=TRUE)
fiberind <- order(colnames(fiber_rate.mat))
fiber_rate.mat <- fiber_rate.mat[fiberind, fiberind]
fiber_fit.marginal <- corHMM(S, fiber.data,
rate.mat = fiber_rate.mat,
node.states = "marginal",
rate.cat = 1, p = fiber.ER$rates,
root.p = fiber.ER$pi)
fiberasr <- fiber_fit.marginal$states
colnames(fiberasr) <- colnames(fiber_rate.mat)
colnames(fiberasr) <- gsub("/","+", colnames(fiberasr))
svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_traitmodeling_fiber_guerbrown.svg", width = 20, height = 10)
fiberpp <- matrix(0, length(fiber), 3, dimnames = list(names(fiber), c("0", "1", "1+0")))
plot.phylo(S, type = "fan", cex = 1.1, align.tip.label = F, lwd = 2, label.offset = 0.05, use.edge.length = F, open.angle =  163, node.depth = 100)
fiberX <- strsplit(setNames(as.character(fiber_rate.mat), names(fiber_rate.mat)),"+", fixed=TRUE)
pies <- matrix(0, Ntip(S),2,
dimnames=list(S$tip.label,
c("0", "1")))
for(i in 1:Ntip(S))
pies[S$tip.label[i],
fiberX[[S$tip.label[i]]]]<-
rep(1/length(fiberX[[S$tip.label[i]]]),
length(fiberX[[S$tip.label[i]]]))
fibercols <- setNames(c("firebrick1", "dodgerblue1"),
c("0", "1"))
par(fg="white")
fiber <- setNames(data$fiber, data$Synergus)
fiberxx <- strsplit(as.character(fiber), split = "+", fixed = T)
fiberpp <- matrix(0, length(fiber), 3, dimnames = list(names(fiber), c("0", "1", "1+0")))
for (i in 1:nrow(fiberpp)) fiberpp[i,fiberxx[[i]]]<-1/length(fiberxx[[i]])
tiplabels(pie = fiberpp, piecol = fibercols, cex=0.3)
par(fg="white")
piecol <- fibercols
for(i in 1:ncol(fiberasr)){
fibernn <- strsplit(colnames(fiberasr)[i],"+", fixed=TRUE)[[1]]
if(length(fibernn)==1) piecol[i] <- fibercols[fibernn]
else if(length(fibernn)==2) piecol[i] <- colorRampPalette(fibercols[fibernn])(3)[2]
else piecol[i]<-"black"
}
names(piecol)<-colnames(fiberasr)
par(fg="white")
nodelabels(pie = fiberasr, piecol = fibercols,cex=0.40)
par(fg="black")
legend("bottom", c("Not Fibrous", "Fribrous"), pch = 21, pt.bg = c("firebrick1", "dodgerblue1"), pt.cex = 2, title = "fiber", cex = 1)
dev.off()
bract <- setNames(data$bract, rownames(data))
levels(bract) <- unique(data$bract)
bract.ER <- fitpolyMk(S, bract, model = "ER")
bractxx <- apply(bract.ER$data,1,
function(x,ss) ss[which(x==1)],
ss=colnames(bract.ER$data))
bractxx <- gsub("+","/", bractxx, fixed=TRUE)
bract.data <- data.frame(Genus_sp = names(bractxx), bract = bractxx)
bract_rate.mat <- bract.ER$index.matrix
bract_rate.mat[bract_rate.mat==0] <- NA
colnames(bract_rate.mat) <- rownames(bract_rate.mat) <- gsub("+","/", colnames(bract_rate.mat), fixed=TRUE)
bractind <- order(colnames(bract_rate.mat))
bract_rate.mat <- bract_rate.mat[bractind, bractind]
bract_fit.marginal <- corHMM(S, bract.data,
rate.mat = bract_rate.mat,
node.states = "marginal",
rate.cat = 1, p = bract.ER$rates,
root.p = bract.ER$pi)
bractasr <- bract_fit.marginal$states
colnames(bractasr) <- colnames(bract_rate.mat)
colnames(bractasr) <- gsub("/","+", colnames(bractasr))
svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_traitmodeling_bract_guerbrown.svg", width = 20, height = 10)
bractpp <- matrix(0, length(bract), 3, dimnames = list(names(bract), c("0", "1", "1+0")))
plot.phylo(S, type = "fan", cex = 1.1, align.tip.label = F, lwd = 2, label.offset = 0.05, use.edge.length = F, open.angle =  163, node.depth = 100)
bractX <- strsplit(setNames(as.character(bract_rate.mat), names(bract_rate.mat)),"+", fixed=TRUE)
pies <- matrix(0, Ntip(S),2,
dimnames=list(S$tip.label,
c("0", "1")))
for(i in 1:Ntip(S))
pies[S$tip.label[i],
bractX[[S$tip.label[i]]]]<-
rep(1/length(bractX[[S$tip.label[i]]]),
length(bractX[[S$tip.label[i]]]))
bractcols <- setNames(c("firebrick1", "dodgerblue1", "grey15"),
c("0", "1"))
par(fg="white")
bract <- setNames(data$bract, data$Synergus)
bractxx <- strsplit(as.character(bract), split = "+", fixed = T)
bractpp <- matrix(0, length(bract), 3, dimnames = list(names(bract), c("0", "1", "1+0")))
for (i in 1:nrow(bractpp)) bractpp[i,bractxx[[i]]]<-1/length(bractxx[[i]])
tiplabels(pie = bractpp, piecol = bractcols, cex=0.3)
par(fg="white")
piecol <- bractcols
for(i in 1:ncol(bractasr)){
bractnn <- strsplit(colnames(bractasr)[i],"+", fixed=TRUE)[[1]]
if(length(bractnn)==1) piecol[i] <- bractcols[bractnn]
else if(length(bractnn)==2) piecol[i] <- colorRampPalette(bractcols[bractnn])(3)[2]
else piecol[i]<-"black"
}
names(piecol)<-colnames(bractasr)
par(fg="white")
nodelabels(pie = bractasr, piecol = bractcols,cex=0.40)
par(fg="black")
legend("bottom", c("No Bract", "Bract"), pch = 21, pt.bg = c("firebrick1", "dodgerblue1"), pt.cex = 2, title = "Bract", cex = 1)
dev.off()
woody <- setNames(data$woody, rownames(data))
levels(woody) <- unique(data$woody)
woody.ER <- fitpolyMk(S, woody, model = "ER")
woodyxx <- apply(woody.ER$data,1,
function(x,ss) ss[which(x==1)],
ss=colnames(woody.ER$data))
woodyxx <- gsub("+","/", woodyxx, fixed=TRUE)
woody.data <- data.frame(Genus_sp = names(woodyxx), woody = woodyxx)
woody_rate.mat <- woody.ER$index.matrix
woody_rate.mat[woody_rate.mat==0] <- NA
colnames(woody_rate.mat) <- rownames(woody_rate.mat) <- gsub("+","/", colnames(woody_rate.mat), fixed=TRUE)
woodyind <- order(colnames(woody_rate.mat))
woody_rate.mat <- woody_rate.mat[woodyind, woodyind]
woody_fit.marginal <- corHMM(S, woody.data,
rate.mat = woody_rate.mat,
node.states = "marginal",
rate.cat = 1, p = woody.ER$rates,
root.p = woody.ER$pi)
woodyasr <- woody_fit.marginal$states
colnames(woodyasr) <- colnames(woody_rate.mat)
colnames(woodyasr) <- gsub("/","+", colnames(woodyasr))
svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_traitmodeling_woody_guerbrown.svg", width = 20, height = 10)
woodypp <- matrix(0, length(woody), 3, dimnames = list(names(woody), c("0", "1", "1+0")))
plot.phylo(S, type = "fan", cex = 1.1, align.tip.label = F, lwd = 2, label.offset = 0.05, use.edge.length = F, open.angle =  163, node.depth = 100)
woodyX <- strsplit(setNames(as.character(woody_rate.mat), names(woody_rate.mat)),"+", fixed=TRUE)
pies <- matrix(0, Ntip(S),2,
dimnames=list(S$tip.label,
c("0", "1")))
for(i in 1:Ntip(S))
pies[S$tip.label[i],
woodyX[[S$tip.label[i]]]]<-
rep(1/length(woodyX[[S$tip.label[i]]]),
length(woodyX[[S$tip.label[i]]]))
woodycols <- setNames(c("firebrick1", "dodgerblue1"),
c("0", "1"))
par(fg="white")
woody <- setNames(data$woody, data$Synergus)
woodyxx <- strsplit(as.character(woody), split = "+", fixed = T)
woodypp <- matrix(0, length(woody), 3, dimnames = list(names(woody), c("0", "1", "1+0")))
for (i in 1:nrow(woodypp)) woodypp[i,woodyxx[[i]]]<-1/length(woodyxx[[i]])
tiplabels(pie = woodypp, piecol = woodycols, cex=0.3)
par(fg="white")
piecol <- woodycols
for(i in 1:ncol(woodyasr)){
woodynn <- strsplit(colnames(woodyasr)[i],"+", fixed=TRUE)[[1]]
if(length(woodynn)==1) piecol[i] <- woodycols[woodynn]
else if(length(woodynn)==2) piecol[i] <- colorRampPalette(woodycols[woodynn])(3)[2]
else piecol[i]<-"black"
}
names(piecol)<-colnames(woodyasr)
par(fg="white")
nodelabels(pie = woodyasr, piecol = woodycols,cex=0.40)
par(fg="black")
legend("bottom", c("Not Woody", "Woody"), pch = 21, pt.bg = c("firebrick1", "dodgerblue1"), pt.cex = 2, cex = 1)
dev.off()
fleshy <- setNames(data$fleshy, rownames(data))
levels(fleshy) <- unique(data$fleshy)
fleshy.ER <- fitpolyMk(S, fleshy, model = "ER")
fleshyxx <- apply(fleshy.ER$data,1,
function(x,ss) ss[which(x==1)],
ss=colnames(fleshy.ER$data))
fleshyxx <- gsub("+","/", fleshyxx, fixed=TRUE)
fleshy.data <- data.frame(Genus_sp = names(fleshyxx), fleshy = fleshyxx)
fleshy_rate.mat <- fleshy.ER$index.matrix
fleshy_rate.mat[fleshy_rate.mat==0] <- NA
colnames(fleshy_rate.mat) <- rownames(fleshy_rate.mat) <- gsub("+","/", colnames(fleshy_rate.mat), fixed=TRUE)
fleshyind <- order(colnames(fleshy_rate.mat))
fleshy_rate.mat <- fleshy_rate.mat[fleshyind, fleshyind]
fleshy_fit.marginal <- corHMM(S, fleshy.data,
rate.mat = fleshy_rate.mat,
node.states = "marginal",
rate.cat = 1, p = fleshy.ER$rates,
root.p = fleshy.ER$pi)
fleshyasr <- fleshy_fit.marginal$states
colnames(fleshyasr) <- colnames(fleshy_rate.mat)
colnames(fleshyasr) <- gsub("/","+", colnames(fleshyasr))
svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_traitmodeling_fleshy_guerbrown.svg", width = 20, height = 10)
fleshypp <- matrix(0, length(fleshy), 3, dimnames = list(names(fleshy), c("0", "1", "1+0")))
plot.phylo(S, type = "fan", cex = 1.1, align.tip.label = F, lwd = 2, label.offset = 0.05, use.edge.length = F, open.angle =  163, node.depth = 100)
fleshyX <- strsplit(setNames(as.character(fleshy_rate.mat), names(fleshy_rate.mat)),"+", fixed=TRUE)
pies <- matrix(0, Ntip(S),2,
dimnames=list(S$tip.label,
c("0", "1")))
for(i in 1:Ntip(S))
pies[S$tip.label[i],
fleshyX[[S$tip.label[i]]]]<-
rep(1/length(fleshyX[[S$tip.label[i]]]),
length(fleshyX[[S$tip.label[i]]]))
fleshycols <- setNames(c("firebrick1", "dodgerblue1", "grey15"),
c("0", "1"))
par(fg="white")
fleshy <- setNames(data$fleshy, data$Synergus)
fleshyxx <- strsplit(as.character(fleshy), split = "+", fixed = T)
fleshypp <- matrix(0, length(fleshy), 3, dimnames = list(names(fleshy), c("0", "1", "1+0")))
for (i in 1:nrow(fleshypp)) fleshypp[i,fleshyxx[[i]]]<-1/length(fleshyxx[[i]])
tiplabels(pie = fleshypp, piecol = fleshycols, cex=0.3)
par(fg="white")
piecol <- fleshycols
for(i in 1:ncol(fleshyasr)){
fleshynn <- strsplit(colnames(fleshyasr)[i],"+", fixed=TRUE)[[1]]
if(length(fleshynn)==1) piecol[i] <- fleshycols[fleshynn]
else if(length(fleshynn)==2) piecol[i] <- colorRampPalette(fleshycols[fleshynn])(3)[2]
else piecol[i]<-"black"
}
names(piecol)<-colnames(fleshyasr)
par(fg="white")
nodelabels(pie = fleshyasr, piecol = fleshycols,cex=0.40)
par(fg="black")
legend("bottom", c("Not Fleshy", "Fleshy", "Both"), pch = 21, pt.bg = c("firebrick1", "dodgerblue1", "grey15"), pt.cex = 2, cex = 1)
dev.off()
season <- setNames(data$season, rownames(data))
levels(season) <- unique(data$season)
season.ER <- fitpolyMk(S, season, model = "ER")
seasonxx <- apply(season.ER$data,1,
function(x,ss) ss[which(x==1)],
ss=colnames(season.ER$data))
seasonxx <- gsub("+","/", seasonxx, fixed=TRUE)
season.data <- data.frame(Genus_sp = names(seasonxx), season = seasonxx)
season_rate.mat <- season.ER$index.matrix
season_rate.mat[season_rate.mat==0] <- NA
colnames(season_rate.mat) <- rownames(season_rate.mat) <- gsub("+","/", colnames(season_rate.mat), fixed=TRUE)
seasonind <- order(colnames(season_rate.mat))
season_rate.mat <- season_rate.mat[seasonind, seasonind]
season_fit.marginal <- corHMM(S, season.data,
rate.mat = season_rate.mat,
node.states = "marginal",
rate.cat = 1, p = season.ER$rates,
root.p = season.ER$pi)
seasonasr <- season_fit.marginal$states
colnames(seasonasr) <- colnames(season_rate.mat)
colnames(seasonasr) <- gsub("/","+", colnames(seasonasr))
svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_traitmodeling_season_guerbrown.svg", width = 20, height = 10)
seasonpp <- matrix(0, length(season), 3, dimnames = list(names(season), c("3", "2", "2+3")))
plot.phylo(S, type = "fan", cex = 1.1, align.tip.label = F, lwd = 2, label.offset = 0.05, use.edge.length = F, open.angle =  163, node.depth = 100)
seasonX <- strsplit(setNames(as.character(season_rate.mat), names(season_rate.mat)),"+", fixed=TRUE)
pies <- matrix(0, Ntip(S),3,
dimnames=list(S$tip.label,
c("3", "2", "2+3")))
for(i in 1:Ntip(S))
pies[S$tip.label[i],
seasonX[[S$tip.label[i]]]]<-
rep(1/length(seasonX[[S$tip.label[i]]]),
length(seasonX[[S$tip.label[i]]]))
seasoncols <- setNames(c("firebrick1", "dodgerblue1", "grey15"),
c("0", "1"))
par(fg="white")
season <- setNames(data$season, data$Synergus)
seasonxx <- strsplit(as.character(season), split = "+", fixed = T)
seasonpp <- matrix(0, length(season), 3, dimnames = list(names(season), c("3", "2", "2+3")))
for (i in 1:nrow(seasonpp)) seasonpp[i,seasonxx[[i]]]<-1/length(seasonxx[[i]])
tiplabels(pie = seasonpp, piecol = seasoncols, cex=0.3)
par(fg="white")
piecol <- seasoncols
for(i in 1:ncol(seasonasr)){
seasonnn <- strsplit(colnames(seasonasr)[i],"+", fixed=TRUE)[[1]]
if(length(seasonnn)==1) piecol[i] <- seasoncols[seasonnn]
else if(length(seasonnn)==2) piecol[i] <- colorRampPalette(seasoncols[seasonnn])(3)[2]
else piecol[i]<-"black"
}
names(piecol)<-colnames(seasonasr)
par(fg="white")
nodelabels(pie = seasonasr, piecol = seasoncols,cex=0.40)
par(fg="black")
legend("bottom", c("Fall", "Summer", "Fall+Summer"), pch = 21, pt.bg = c("firebrick1", "dodgerblue1", "grey15"), pt.cex = 2, title = "Season", cex = 1)
dev.off()
location <- setNames(data$location, rownames(data))
levels(location) <- unique(data$location)
location.ER <- fitpolyMk(S, location, model = "ER")
locationxx <- apply(location.ER$data,1,
function(x,ss) ss[which(x==1)],
ss=colnames(location.ER$data))
locationxx <- gsub("+","/", locationxx, fixed=TRUE)
location.data <- data.frame(Genus_sp = names(locationxx), location = locationxx)
location_rate.mat <- location.ER$index.matrix
location_rate.mat[location_rate.mat==0] <- NA
colnames(location_rate.mat) <- rownames(location_rate.mat) <- gsub("+","/", colnames(location_rate.mat), fixed=TRUE)
locationind <- order(colnames(location_rate.mat))
location_rate.mat <- location_rate.mat[locationind, locationind]
location_fit.marginal <- corHMM(S, location.data,
rate.mat = location_rate.mat,
node.states = "marginal",
rate.cat = 1, p = location.ER$rates,
root.p = location.ER$pi)
locationasr <- location_fit.marginal$states
colnames(locationasr) <- colnames(location_rate.mat)
colnames(locationasr) <- gsub("/","+", colnames(locationasr))
locationasr[,"acorn"] <- locationasr[,"acorn"] + 1/2*(locationasr)[,2] + 1/3*(locationasr[,3]) + 1/4*(locationasr[,4]) + 1/5*(locationasr[,5]) + 1/4*(locationasr[,6]) + 1/3*(locationasr[,7]) + 1/4*(locationasr[,8]) + 1/3*(locationasr[,9]) + 1/2*(locationasr[,10]) + 1/3*(locationasr[,11]) + 1/4*(locationasr[,12]) + 1/3*(locationasr[,13]) + 1/2*(locationasr[,14]) + 1/3*(locationasr[,15]) + 1/2*(locationasr[,16])
locationasr[,"bud"] <- locationasr[,"bud"] + 1/2*(locationasr)[,2] + 1/3*(locationasr[,3]) + 1/4*(locationasr[,4]) + 1/5*(locationasr[,5]) + 1/4*(locationasr[,6]) + 1/3*(locationasr[,7]) + 1/4*(locationasr[,8]) + 1/3*(locationasr[,9]) + 1/2*(locationasr[,18]) + 1/3*(locationasr[,19]) + 1/4*(locationasr[,20]) + 1/3*(locationasr[,21]) + 1/2*(locationasr[,22]) + 1/3*(locationasr[,23]) + 1/2*(locationasr[,24])
locationasr[,"leaf"] <- locationasr[,"leaf"] + 1/3*(locationasr[,3]) + 1/4*(locationasr[,4]) + 1/5*(locationasr[,5]) + 1/4*(locationasr[,6]) + 1/2*(locationasr[,10]) + 1/3*(locationasr[,11]) + 1/4*(locationasr[,12]) + 1/3*(locationasr[,13]) + 1/2*(locationasr[,18]) + 1/3*(locationasr[,19]) + 1/4*(locationasr[,20]) + 1/3*(locationasr[,21]) + 1/2*(locationasr[,26]) + 1/3*(locationasr[,27]) + 1/2*(locationasr[,28])
locationasr[,"petiole"] <- locationasr[,"petiole"] + 1/4*(locationasr[,4]) + 1/5*(locationasr[,5]) + 1/3*(locationasr[,7]) + 1/4*(locationasr[,8]) + 1/3*(locationasr[,11]) + 1/4*(locationasr[,12]) + 1/3*(locationasr[,15]) + 1/3*(locationasr[,19]) + 1/4*(locationasr[,20]) + 1/2*(locationasr[,22]) + 1/3*(locationasr[,23]) + 1/2*(locationasr[,26]) + 1/3*(locationasr[,27]) + 1/2*(locationasr[,30])
locationasr[,"stem"] <- locationasr[,"stem"] + 1/5*(locationasr[,5]) + 1/4*(locationasr[,6]) + 1/4*(locationasr[,8]) + 1/3*(locationasr[,9]) + 1/4*(locationasr[,12]) + 1/3*(locationasr[,13]) + 1/3*(locationasr[,15]) + 1/2*(locationasr[,16]) + 1/4*(locationasr[,20]) + 1/3*(locationasr[,21]) + 1/3*(locationasr[,23]) + 1/2*(locationasr[,24]) + 1/3*(locationasr[,27]) + 1/2*(locationasr[,28]) + 1/2*(locationasr[,30])
locationasr <- data.frame(locationasr[,"acorn"], locationasr[,"bud"], locationasr[,"leaf"], locationasr[,"petiole"], locationasr[,"stem"])
#svg("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_traitmodeling_location_guerbrown.svg", width = 20, height = 10)
locationpp <- matrix(0, length(location), 5, dimnames = list(names(location), c("acorn", "bud", "leaf", "petiole", "stem")))
plot.phylo(S, type = "fan", cex = 1.1, align.tip.label = F, lwd = 2, label.offset = 0.05, use.edge.length = F, open.angle =  163, node.depth = 100)
locationX <- strsplit(setNames(as.character(location_rate.mat), names(location_rate.mat)),"+", fixed=TRUE)
pies <- matrix(0, Ntip(S),5,
dimnames=list(S$tip.label,
c("acorn", "bud", "leaf", "petiole", "stem")))
for(i in 1:Ntip(S))
pies[S$tip.label[i],
locationX[[S$tip.label[i]]]]<-
rep(1/length(locationX[[S$tip.label[i]]]),
length(locationX[[S$tip.label[i]]]))
locationcols <- setNames(c("firebrick1", "dodgerblue1", "gold1", "grey15", "green"),
c("0", "1"))
par(fg="white")
location <- setNames(data$location, data$Synergus)
locationxx <- strsplit(as.character(location), split = "+", fixed = T)
locationpp <- matrix(0, length(location), 5, dimnames = list(names(location), c("acorn", "bud", "leaf", "petiole", "stem")))
for (i in 1:nrow(locationpp)) locationpp[i,locationxx[[i]]]<-1/length(locationxx[[i]])
tiplabels(pie = locationpp, piecol = locationcols, cex=0.3)
par(fg="white")
piecol <- locationcols
for(i in 1:ncol(locationasr)){
locationnn <- strsplit(colnames(locationasr)[i],"+", fixed=TRUE)[[1]]
if(length(locationnn)==1) piecol[i] <- locationcols[locationnn]
else if(length(locationnn)==2) piecol[i] <- colorRampPalette(locationcols[locationnn])(3)[2]
else piecol[i]<-"black"
}
names(piecol)<-colnames(locationasr)
par(fg="white")
nodelabels(pie = locationasr, piecol = locationcols,cex=0.40)
par(fg="black")
legend("bottom", c("acorn", "bud", "leaf", "petiole", "stem"), pch = 21, pt.bg = c(locationcols), pt.cex = 2, title = "location", cex = 1)
#dev.off()
