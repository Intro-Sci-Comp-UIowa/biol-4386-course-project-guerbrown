SQres.jackn <- SQres.jackn*(-(NLinks-1))
SQres.jackn <- SQres.jackn*-1
SQres <- SQres*NLinks
SQres <- as.matrix(SQres)
SQres.jackn <- as.data.frame(SQres.jackn)
SQres.jackn <- t(apply(SQres.jackn, 1, "+", SQres))
phi.mean <- apply(SQres.jackn, 2, mean, na.rm = TRUE)
phi.UCI <- apply(SQres.jackn, 2, sd, na.rm = TRUE)
t.critical = qt(0.975, NLinks-1)
phi.UCI <- phi.mean + t.critical * phi.UCI/sqrt(NLinks)
phi.UCI
par(mar = c(7, 5, 3, 6))
pat.bar <- barplot(sort(phi.mean), names.arg = "", space = 0.2, col="white", ylab= "Squared residuals", ylim=c(0, max(phi.UCI)),cex.lab=1.2)
segments(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5)
arrows(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5, angle = 90, code = 3, length = 0.05)
abline(a=median(phi.mean), b=0, lty=2)
text(pat.bar, par("usr")[3] - 0.001, srt = 330, adj = 0, labels = rownames(SQres.jackn), xpd = TRUE, font = 1, cex=0.6, las = 1)
text(22.32, 0.05, '*', cex = 3)
text(25.93, 0.053, '*', cex = 3)
text(pat.bar, par("usr")[3] - 0.001, srt = 330, adj = 0, labels = rownames(SQres.jackn), xpd = TRUE, font = 1, cex=0.6, las = 1, font = 3)
NLinks = 25
SQres <- sort(residuals_paco(D$proc))
SQres.jackn <- SQres**2
SQres <- (residuals (HP.proc)**2)
SQres.jackn <- SQres.jackn*(-(NLinks-1))
SQres.jackn <- SQres.jackn*-1
SQres <- SQres*NLinks
SQres <- as.matrix(SQres)
SQres.jackn <- as.data.frame(SQres.jackn)
SQres.jackn <- t(apply(SQres.jackn, 1, "+", SQres))
phi.mean <- apply(SQres.jackn, 2, mean, na.rm = TRUE)
phi.UCI <- apply(SQres.jackn, 2, sd, na.rm = TRUE)
t.critical = qt(0.975, NLinks-1)
phi.UCI <- phi.mean + t.critical * phi.UCI/sqrt(NLinks)
phi.UCI
par(mar = c(7, 5, 3, 6))
pat.bar <- barplot(sort(phi.mean), names.arg = "", space = 0.2, col="white", ylab= "Squared residuals", ylim=c(0, max(phi.UCI)),cex.lab=1.2)
segments(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5)
arrows(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5, angle = 90, code = 3, length = 0.05)
abline(a=median(phi.mean), b=0, lty=2)
text(pat.bar, par("usr")[3] - 0.001, srt = 330, adj = 0, labels = rownames(SQres.jackn), xpd = TRUE, font = 1, cex=0.6, las = 1, font = 3)
NLinks = 25
SQres <- sort(residuals_paco(D$proc))
SQres.jackn <- SQres**2
SQres <- (residuals (HP.proc)**2)
SQres.jackn <- SQres.jackn*(-(NLinks-1))
SQres.jackn <- SQres.jackn*-1
SQres <- SQres*NLinks
SQres <- as.matrix(SQres)
SQres.jackn <- as.data.frame(SQres.jackn)
SQres.jackn <- t(apply(SQres.jackn, 1, "+", SQres))
phi.mean <- apply(SQres.jackn, 2, mean, na.rm = TRUE)
phi.UCI <- apply(SQres.jackn, 2, sd, na.rm = TRUE)
t.critical = qt(0.975, NLinks-1)
phi.UCI <- phi.mean + t.critical * phi.UCI/sqrt(NLinks)
phi.UCI
par(mar = c(7, 5, 3, 6))
pat.bar <- barplot(sort(phi.mean), names.arg = "", space = 0.2, col="white", ylab= "Squared residuals", ylim=c(0, max(phi.UCI)),cex.lab=1)
segments(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5)
arrows(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5, angle = 90, code = 3, length = 0.05)
abline(a=median(phi.mean), b=0, lty=2)
text(pat.bar, par("usr")[3] - 0.001, srt = 330, adj = 0, labels = rownames(SQres.jackn), xpd = TRUE, font = 1, cex=0.6, las = 1)
text(22.32, 0.05, '*', cex = 3)
text(25.93, 0.053, '*', cex = 3)
NLinks = 25
SQres <- sort(residuals_paco(D$proc))
SQres.jackn <- SQres**2
SQres <- (residuals (HP.proc)**2)
SQres.jackn <- SQres.jackn*(-(NLinks-1))
SQres.jackn <- SQres.jackn*-1
SQres <- SQres*NLinks
SQres <- as.matrix(SQres)
SQres.jackn <- as.data.frame(SQres.jackn)
SQres.jackn <- t(apply(SQres.jackn, 1, "+", SQres))
phi.mean <- apply(SQres.jackn, 2, mean, na.rm = TRUE)
phi.UCI <- apply(SQres.jackn, 2, sd, na.rm = TRUE)
t.critical = qt(0.975, NLinks-1)
phi.UCI <- phi.mean + t.critical * phi.UCI/sqrt(NLinks)
phi.UCI
par(mar = c(7, 5, 3, 6))
pat.bar <- barplot(sort(phi.mean), names.arg = "", space = 0.2, col="white", ylab= "Squared residuals", ylim=c(0, max(phi.UCI)),cex.lab=1)
segments(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5)
arrows(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5, angle = 90, code = 3, length = 0.05)
abline(a=median(phi.mean), b=0, lty=2)
text(pat.bar, par("usr")[3] - 0.001, srt = 330, adj = 0, labels = rownames(SQres.jackn), xpd = TRUE, font = 3, cex=0.6, las = 1)
text(22.32, 0.05, '*', cex = 3)
text(25.93, 0.053, '*', cex = 3)
NLinks = 25
SQres <- sort(residuals_paco(D$proc))
SQres.jackn <- SQres**2
SQres <- (residuals (HP.proc)**2)
SQres.jackn <- SQres.jackn*(-(NLinks-1))
SQres.jackn <- SQres.jackn*-1
SQres <- SQres*NLinks
SQres <- as.matrix(SQres)
SQres.jackn <- as.data.frame(SQres.jackn)
SQres.jackn <- t(apply(SQres.jackn, 1, "+", SQres))
phi.mean <- apply(SQres.jackn, 2, mean, na.rm = TRUE)
phi.UCI <- apply(SQres.jackn, 2, sd, na.rm = TRUE)
t.critical = qt(0.975, NLinks-1)
phi.UCI <- phi.mean + t.critical * phi.UCI/sqrt(NLinks)
phi.UCI
par(mar = c(7, 5, 3, 6))
pat.bar <- barplot(sort(phi.mean), names.arg = "", space = 0.2, col="white", ylab= "Squared residuals", ylim=c(0, max(phi.UCI)),cex.lab=1)
segments(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5)
arrows(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5, angle = 90, code = 3, length = 0.05)
abline(a=median(phi.mean), b=0, lty=2)
text(pat.bar, par("usr")[3] - 0.001, srt = 330, adj = 0, labels = rownames(SQres.jackn), xpd = TRUE, font = 3, cex=0.6, las = 2)
text(22.32, 0.05, '*', cex = 3)
text(25.93, 0.053, '*', cex = 3)
NLinks = 25
SQres <- sort(residuals_paco(D$proc))
SQres.jackn <- SQres**2
SQres <- (residuals (HP.proc)**2)
SQres.jackn <- SQres.jackn*(-(NLinks-1))
SQres.jackn <- SQres.jackn*-1
SQres <- SQres*NLinks
SQres <- as.matrix(SQres)
SQres.jackn <- as.data.frame(SQres.jackn)
SQres.jackn <- t(apply(SQres.jackn, 1, "+", SQres))
phi.mean <- apply(SQres.jackn, 2, mean, na.rm = TRUE)
phi.UCI <- apply(SQres.jackn, 2, sd, na.rm = TRUE)
t.critical = qt(0.975, NLinks-1)
phi.UCI <- phi.mean + t.critical * phi.UCI/sqrt(NLinks)
phi.UCI
par(mar = c(7, 5, 3, 6))
pat.bar <- barplot(sort(phi.mean), names.arg = "", space = 0.2, col="white", ylab= "Squared residuals", ylim=c(0, max(phi.UCI)),cex.lab=1)
segments(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5)
arrows(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5, angle = 90, code = 3, length = 0.05)
abline(a=median(phi.mean), b=0, lty=2)
text(pat.bar, par("usr")[3] - 0.001, srt = 330, adj = 0, labels = rownames(SQres.jackn), xpd = TRUE, font = 3, cex=0.65, las = 2)
text(22.32, 0.05, '*', cex = 3)
text(25.93, 0.053, '*', cex = 3)
par(mar = c(7, 5, 3, 6))
pat.bar <- barplot(sort(phi.mean), names.arg = "", space = 0.2, col="white", ylab= "Squared residuals", ylim=c(0, max(phi.UCI)),cex.lab=1)
segments(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5)
arrows(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5, angle = 90, code = 3, length = 0.05)
abline(a=median(phi.mean), b=0, lty=2)
text(pat.bar, par("usr")[3] - 0.001, srt = 330, adj = 0, labels = rownames(SQres.jackn), xpd = TRUE, font = 3, cex=0.65, las = 2)
text(22.32, 0.05, '*', cex = 3)
text(25.93, 0.053, '*', cex = 3)
NLinks = 25
SQres <- sort(residuals_paco(D$proc))
SQres.jackn <- SQres**2
SQres <- (residuals (HP.proc)**2)
SQres.jackn <- SQres.jackn*(-(NLinks-1))
SQres.jackn <- SQres.jackn*-1
SQres <- SQres*NLinks
SQres <- as.matrix(SQres)
SQres.jackn <- as.data.frame(SQres.jackn)
SQres.jackn <- t(apply(SQres.jackn, 1, "+", SQres))
phi.mean <- apply(SQres.jackn, 2, mean, na.rm = TRUE)
phi.UCI <- apply(SQres.jackn, 2, sd, na.rm = TRUE)
t.critical = qt(0.975, NLinks-1)
phi.UCI <- phi.mean + t.critical * phi.UCI/sqrt(NLinks)
phi.UCI
svg("//wsl.localhost/Ubuntu/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_PACo_ResBarplot_v01_guerbrown_23Feb2023.svg", width = 20, height = 7.5)
par(mar = c(7, 5, 3, 6))
pat.bar <- barplot(sort(phi.mean), names.arg = "", space = 0.2, col="white", ylab= "Squared residuals", ylim=c(0, max(phi.UCI)),cex.lab=1)
segments(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5)
arrows(pat.bar, sort(phi.mean), pat.bar, sort(phi.UCI), lwd = 1.5, angle = 90, code = 3, length = 0.05)
abline(a=median(phi.mean), b=0, lty=2)
text(pat.bar, par("usr")[3] - 0.001, srt = 330, adj = 0, labels = rownames(SQres.jackn), xpd = TRUE, font = 3, cex=0.65, las = 2)
text(22.32, 0.05, '*', cex = 3)
text(25.93, 0.053, '*', cex = 3)
dev.off()
h_matrix <- compute.mr(h)
h_df <- as.data.frame(h_matrix)
host.D <- cophenetic(h)
para.D <- cophenetic(p)
parafit <- parafit(sqrt(host.D), sqrt(para.D), hp_binary, test.links = T, correction = "none", nperm = 10000)
par(mfrow= c(1,3))
cols <- c("blue4", "orange1", "pink1")
#Radial
plot.phylo(tree, type = "radial", cex = 3, align.tip.label = T, lwd = 3.5, label.offset = 0.05)
sectiontotree <- setNames(data$oak_section, data$Synergus)
xx <- strsplit(as.character(sectiontotree), split = "+", fixed = T)
pp <- matrix(0, length(sectiontotree), 3, dimnames = list(names(sectiontotree), c("Quercus","Lobatae","Virentes")))
for (i in 1:nrow(pp)) pp[i,xx[[i]]]<-1/length(xx[[i]])
par(fg = "transparent")
ape::tiplabels(pie = pp, piecol = cols, cex = 0.3)
par(fg = "black")
#Standard tidy phylogeny
plot.phylo(tree, type = "tidy", cex = 3, align.tip.label = F, lwd = 3.5, label.offset = 0.001)
sectiontotree <- setNames(data$oak_section, data$Synergus)
xx <- strsplit(as.character(sectiontotree), split = "+", fixed = T)
pp <- matrix(0, length(sectiontotree), 3, dimnames = list(names(sectiontotree), c("Quercus","Lobatae","Virentes")))
for (i in 1:nrow(pp)) pp[i,xx[[i]]]<-1/length(xx[[i]])
par(fg = "transparent")
ape::tiplabels(pie = pp, piecol = cols, cex = 0.3)
par(fg = "black")
legend("bottomleft", c("Quercus","Lobatae","Virentes"), pch = 21, pt.bg = c("blue4", "orange1", "pink1"), pt.cex = 5, title = "Oak Section", cex = 5)
#Fan phylogeny
plot.phylo(tree, type = "fan", cex = 3, align.tip.label = F, lwd = 3.5, label.offset = 0.0005)
sectiontotree <- setNames(data$oak_section, data$Synergus)
xx <- strsplit(as.character(sectiontotree), split = "+", fixed = T)
pp <- matrix(0, length(sectiontotree), 3, dimnames = list(names(sectiontotree), c("Quercus","Lobatae","Virentes")))
for (i in 1:nrow(pp)) pp[i,xx[[i]]]<-1/length(xx[[i]])
par(fg = "transparent")
ape::tiplabels(pie = pp, piecol = cols, cex = 0.3)
par(fg = "black")
par(mfrow= c(1,3))
cols <- c("blue4", "orange1", "pink1")
#Radial
plot.phylo(tree, type = "radial", cex = 3, align.tip.label = T, lwd = 3.5, label.offset = 0.05)
sectiontotree <- setNames(data$oak_section, data$Synergus)
xx <- strsplit(as.character(sectiontotree), split = "+", fixed = T)
pp <- matrix(0, length(sectiontotree), 3, dimnames = list(names(sectiontotree), c("Quercus","Lobatae","Virentes")))
for (i in 1:nrow(pp)) pp[i,xx[[i]]]<-1/length(xx[[i]])
par(fg = "transparent")
ape::tiplabels(pie = pp, piecol = cols, cex = 0.3)
par(fg = "black")
#Standard tidy phylogeny
plot.phylo(tree, type = "tidy", cex = 3, align.tip.label = F, lwd = 3.5, label.offset = 0.001)
sectiontotree <- setNames(data$oak_section, data$Synergus)
xx <- strsplit(as.character(sectiontotree), split = "+", fixed = T)
pp <- matrix(0, length(sectiontotree), 3, dimnames = list(names(sectiontotree), c("Quercus","Lobatae","Virentes")))
for (i in 1:nrow(pp)) pp[i,xx[[i]]]<-1/length(xx[[i]])
par(fg = "transparent")
ape::tiplabels(pie = pp, piecol = cols, cex = 0.3)
par(fg = "black")
legend("bottomleft", c("Quercus","Lobatae","Virentes"), pch = 21, pt.bg = c("blue4", "orange1", "pink1"), pt.cex = 5, title = "Oak Section", cex = 5)
#Fan phylogeny
plot.phylo(tree, type = "fan", cex = 3, align.tip.label = F, lwd = 3.5, label.offset = 0.0005, use.edge.length = F)
sectiontotree <- setNames(data$oak_section, data$Synergus)
xx <- strsplit(as.character(sectiontotree), split = "+", fixed = T)
pp <- matrix(0, length(sectiontotree), 3, dimnames = list(names(sectiontotree), c("Quercus","Lobatae","Virentes")))
for (i in 1:nrow(pp)) pp[i,xx[[i]]]<-1/length(xx[[i]])
par(fg = "transparent")
ape::tiplabels(pie = pp, piecol = cols, cex = 0.3)
par(fg = "black")
par(mfrow= c(1,3))
cols <- c("blue4", "orange1", "pink1")
#Radial
plot.phylo(tree, type = "radial", cex = 3, align.tip.label = T, lwd = 3.5, label.offset = 0.05)
sectiontotree <- setNames(data$oak_section, data$Synergus)
xx <- strsplit(as.character(sectiontotree), split = "+", fixed = T)
pp <- matrix(0, length(sectiontotree), 3, dimnames = list(names(sectiontotree), c("Quercus","Lobatae","Virentes")))
for (i in 1:nrow(pp)) pp[i,xx[[i]]]<-1/length(xx[[i]])
par(fg = "transparent")
ape::tiplabels(pie = pp, piecol = cols, cex = 0.3)
par(fg = "black")
#Standard tidy phylogeny
plot.phylo(tree, type = "tidy", cex = 3, align.tip.label = F, lwd = 3.5, label.offset = 0.001)
sectiontotree <- setNames(data$oak_section, data$Synergus)
xx <- strsplit(as.character(sectiontotree), split = "+", fixed = T)
pp <- matrix(0, length(sectiontotree), 3, dimnames = list(names(sectiontotree), c("Quercus","Lobatae","Virentes")))
for (i in 1:nrow(pp)) pp[i,xx[[i]]]<-1/length(xx[[i]])
par(fg = "transparent")
ape::tiplabels(pie = pp, piecol = cols, cex = 0.3)
par(fg = "black")
legend("bottomleft", c("Quercus","Lobatae","Virentes"), pch = 21, pt.bg = c("blue4", "orange1", "pink1"), pt.cex = 5, title = "Oak Section", cex = 5)
#Fan phylogeny
plot.phylo(tree, type = "fan", cex = 3, align.tip.label = F, lwd = 3.5, label.offset = 0.05, use.edge.length = F)
sectiontotree <- setNames(data$oak_section, data$Synergus)
xx <- strsplit(as.character(sectiontotree), split = "+", fixed = T)
pp <- matrix(0, length(sectiontotree), 3, dimnames = list(names(sectiontotree), c("Quercus","Lobatae","Virentes")))
for (i in 1:nrow(pp)) pp[i,xx[[i]]]<-1/length(xx[[i]])
par(fg = "transparent")
ape::tiplabels(pie = pp, piecol = cols, cex = 0.3)
par(fg = "black")
#pull states off the fitted model object
xx <- apply(oaksection.ER$data,1,
function(x,ss) ss[which(x==1)],
ss=colnames(oaksection.ER$data))
#corHMM does not like to work with + so let's replace those with /
xx<-gsub("+","/",xx,fixed=TRUE)
#build corHMM data frame
oak.data <- data.frame(Genus_sp = names(xx), habitat = xx)
head(oak.data)
#Pull out model design matrix from the fitted object
rate.mat <- oaksection.ER$index.matrix
rate.mat[rate.mat==0] <- NA
colnames(rate.mat) <- rownames(rate.mat) <- gsub("+","/",
colnames(rate.mat),fixed=TRUE)
ind <- order(colnames(rate.mat))
rate.mat <- rate.mat[ind,ind]
rate.mat
#Ancestral States
fit.marginal<-corHMM(tree,oak.data,
rate.mat=rate.mat,
node.states="marginal",
rate.cat=1,p=oaksection.ER$rates,
root.p=oaksection.ER$pi)
fit.marginal
#Here we see a recapitulation of the data observed in the ER model which is a good sign
#Marginal states are stores in $states. Extract this and ensure the model is consistent
asr<-fit.marginal$states
colnames(asr)<-colnames(rate.mat)
colnames(asr)<-gsub("/","+",colnames(asr))
#pull states off the fitted model object
xx <- apply(oaksection.ER$data,1,
function(x,ss) ss[which(x==1)],
ss=colnames(oaksection.ER$data))
#corHMM does not like to work with + so let's replace those with /
#xx<-gsub("+","/",xx,fixed=TRUE)
#build corHMM data frame
oak.data <- data.frame(Genus_sp = names(xx), habitat = xx)
head(oak.data)
#Pull out model design matrix from the fitted object
rate.mat <- oaksection.ER$index.matrix
rate.mat[rate.mat==0] <- NA
colnames(rate.mat) <- rownames(rate.mat) <- gsub("+","/",
colnames(rate.mat),fixed=TRUE)
ind <- order(colnames(rate.mat))
rate.mat <- rate.mat[ind,ind]
rate.mat
#Ancestral States
fit.marginal<-corHMM(tree,oak.data,
rate.mat=rate.mat,
node.states="marginal",
rate.cat=1,p=oaksection.ER$rates,
root.p=oaksection.ER$pi)
fit.marginal
#Here we see a recapitulation of the data observed in the ER model which is a good sign
#Marginal states are stores in $states. Extract this and ensure the model is consistent
asr<-fit.marginal$states
colnames(asr)<-colnames(rate.mat)
colnames(asr)<-gsub("/","+",colnames(asr))
treephylo <- plotTree(tree, ftype = "i", type = "fan", fsize = 0.7, offset = 5, part = 1, outline = T, lwd = 3.5, align.tip.lable = T)
X<-strsplit(setNames(as.character(rate.mat),names(rate.mat)),"+", fixed=TRUE)
pies<-matrix(0,Ntip(tree),3,
dimnames=list(tree$tip.label,
c("Quercus","Lobatae","Virentes")))
for(i in 1:Ntip(tree))
pies[tree$tip.label[i],
X[[tree$tip.label[i]]]]<-
rep(1/length(X[[tree$tip.label[i]]]),
length(X[[tree$tip.label[i]]]))
cols<-setNames(c("blue", "red", "yellow"),
c("Quercus","Lobatae","Virentes"))
par(fg="black")
tiplabels(pie=pp,piecol=cols,cex=0.3)
par(fg="black")
piecol<-vector()
for(i in 1:ncol(asr)){
nn<-strsplit(colnames(asr)[i],"+",fixed=TRUE)[[1]]
if(length(nn)==1) piecol[i]<-cols[nn]
else if(length(nn)==2) piecol[i]<-colorRampPalette(cols[nn])(3)[2]
else piecol[i]<-"black"
}
names(piecol)<-colnames(asr)
par(fg="transparent")
nodelabels(pie=asr,piecol=piecol,cex=0.3)
par(fg="black")
legend(x="topleft",legend=colnames(asr),
pt.cex=1.8,pch=16,cex=0.8,col=piecol,
bty="n")
#Mapping both the simulation data and the most likely model
par(mfrow = c(10,10))
null <- sapply(oaksection_modeltree[seq(10,1000, by = 10)],
plot, lwd =1, ftype = "off")
#pull states off the fitted model object
xx <- apply(oaksection.ER$data,1,
function(x,ss) ss[which(x==1)],
ss=colnames(oaksection.ER$data))
#corHMM does not like to work with + so let's replace those with /
#xx<-gsub("+","/",xx,fixed=TRUE)
#build corHMM data frame
oak.data <- data.frame(Genus_sp = names(xx), habitat = xx)
head(oak.data)
#Pull out model design matrix from the fitted object
rate.mat <- oaksection.ER$index.matrix
rate.mat[rate.mat==0] <- NA
colnames(rate.mat) <- rownames(rate.mat) <- gsub("+","/",
colnames(rate.mat),fixed=TRUE)
ind <- order(colnames(rate.mat))
rate.mat <- rate.mat[ind,ind]
rate.mat
#Ancestral States
fit.marginal<-corHMM(tree,oak.data,
rate.mat=rate.mat,
node.states="marginal",
rate.cat=1,p=oaksection.ER$rates,
root.p=oaksection.ER$pi)
fit.marginal
#Here we see a recapitulation of the data observed in the ER model which is a good sign
#Marginal states are stores in $states. Extract this and ensure the model is consistent
asr<-fit.marginal$states
colnames(asr)<-colnames(rate.mat)
colnames(asr)<-gsub("/","+",colnames(asr))
#pull states off the fitted model object
xx <- apply(oaksection.ER$data,1,
function(x,ss) ss[which(x==1)],
ss=colnames(oaksection.ER$data))
#corHMM does not like to work with + so let's replace those with /
xx<-gsub("+","/",xx,fixed=TRUE)
#build corHMM data frame
oak.data <- data.frame(Genus_sp = names(xx), habitat = xx)
head(oak.data)
#Pull out model design matrix from the fitted object
rate.mat <- oaksection.ER$index.matrix
rate.mat[rate.mat==0] <- NA
colnames(rate.mat) <- rownames(rate.mat) <- gsub("+","/",
colnames(rate.mat),fixed=TRUE)
ind <- order(colnames(rate.mat))
rate.mat <- rate.mat[ind,ind]
rate.mat
#Ancestral States
fit.marginal<-corHMM(tree,oak.data,
rate.mat=rate.mat,
node.states="marginal",
rate.cat=1,p=oaksection.ER$rates,
root.p=oaksection.ER$pi)
fit.marginal
#Here we see a recapitulation of the data observed in the ER model which is a good sign
#Marginal states are stores in $states. Extract this and ensure the model is consistent
asr<-fit.marginal$states
colnames(asr)<-colnames(rate.mat)
colnames(asr)<-gsub("/","+",colnames(asr))
#Recapitulation of the best fit model from the v3.01b file of the Synergus Script
oaksection <- setNames(data$oak_section, rownames(data))
levels(oaksection)
oaksection.ER <- fitMk(tree, oaksection, model = "ER", quiet = T)
plot(oaksection.ER,
main = "Oak Section ER Model")
#Stochastic Mapping of Ancestral Traits with 10,000 simulations
oaksection_modeltree <- make.simmap(tree, oaksection, model = "ER", nsim = 1, Q ="mcmc", vQ = 0.01,
prior = list(use.empirical = T), samplefreq = 100)
#pull states off the fitted model object
xx <- apply(oaksection.ER$data,1,
function(x,ss) ss[which(x==1)],
ss=colnames(oaksection.ER$data))
treephylo <- plotTree(tree, ftype = "i", type = "fan", fsize = 0.7, offset = 5, part = 1, outline = T, lwd = 3.5, align.tip.lable = T)
X<-strsplit(setNames(as.character(rate.mat),names(rate.mat)),"+", fixed=TRUE)
pies<-matrix(0,Ntip(tree),3,
dimnames=list(tree$tip.label,
c("Quercus","Lobatae","Virentes")))
for(i in 1:Ntip(tree))
pies[tree$tip.label[i],
X[[tree$tip.label[i]]]]<-
rep(1/length(X[[tree$tip.label[i]]]),
length(X[[tree$tip.label[i]]]))
cols<-setNames(c("blue", "red", "yellow"),
c("Quercus","Lobatae","Virentes"))
par(fg="black")
tiplabels(pie=pp,piecol=cols,cex=0.3)
par(fg="black")
piecol<-vector()
for(i in 1:ncol(asr)){
nn<-strsplit(colnames(asr)[i],"+",fixed=TRUE)[[1]]
if(length(nn)==1) piecol[i]<-cols[nn]
else if(length(nn)==2) piecol[i]<-colorRampPalette(cols[nn])(3)[2]
else piecol[i]<-"black"
}
names(piecol)<-colnames(asr)
par(fg="transparent")
nodelabels(pie=asr,piecol=piecol,cex=0.3)
par(fg="black")
legend(x="topleft",legend=colnames(asr),
pt.cex=1.8,pch=16,cex=0.8,col=piecol,
bty="n")
knitr::opts_chunk$set(echo = TRUE)
svg("//wsl.localhost/Ubuntu/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_PACo_SynTree_v01_guerbrown_23Feb2023.svg")
#Import
p <- readNexus(parasitetree)
#Fixing tip labels. This is unnecessary but it's nice to make sure everything is plotting correctly
tiplabel_syn <- c("Synergus_sp.6", "S._punctatus_A", "S._campanula_A", "Synergus_sp.3", "Synergus_sp.7", "Synergus_sp.8",
"S._walshii_A", "S._erinacei_A", "S._erinacei_B", "S._villosus", "S._magnus", "Synergus_sp.2",
"S._ochreus", "S._oneratus_A", "S._oneratus_B", "S._oneratus_C", "S._coniferae", "S._lignicola",
"S._laeviventris_A", "S._laeviventris_B", "S._laeviventris_C")
p$tip.label <- tiplabel_syn
#Rooting the phylogeny based on a version of the tree with an outgroup and plotting
root.phylo(p, 1, resolve.root = T)
plot.phylo(p, align.tip.label = T, use.edge.length = F, root.edge = T)
dev.off()
parasitetree <- "//wsl.localhost/Ubuntu/home/guerbrown/github_local/biol-4386-course-project-guerbrown/data/PACo/inqcophy_PACo_UCECO1SynTree_v02_guerbrown_22Feb2023.nex"
hosttree <- "//wsl.localhost/Ubuntu/home/guerbrown/github_local/biol-4386-course-project-guerbrown/data/PACo/inqcophy_PACo_CynipidTree_v02_guerbrown_22Feb2023.nex"
assocdata <- "//wsl.localhost/Ubuntu/home/guerbrown/github_local/biol-4386-course-project-guerbrown/data/PACo/inqcophy_PACo_AssociationMatrix_guerbrown_v6_20Feb2023.csv"
library(paco)
library(ape)
library(vegan)
library(phytools)
library(plotrix)
svg("//wsl.localhost/Ubuntu/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_PACo_SynTree_v01_guerbrown_23Feb2023.svg")
#Import
p <- readNexus(parasitetree)
#Fixing tip labels. This is unnecessary but it's nice to make sure everything is plotting correctly
tiplabel_syn <- c("Synergus_sp.6", "S._punctatus_A", "S._campanula_A", "Synergus_sp.3", "Synergus_sp.7", "Synergus_sp.8",
"S._walshii_A", "S._erinacei_A", "S._erinacei_B", "S._villosus", "S._magnus", "Synergus_sp.2",
"S._ochreus", "S._oneratus_A", "S._oneratus_B", "S._oneratus_C", "S._coniferae", "S._lignicola",
"S._laeviventris_A", "S._laeviventris_B", "S._laeviventris_C")
p$tip.label <- tiplabel_syn
#Rooting the phylogeny based on a version of the tree with an outgroup and plotting
root.phylo(p, 1, resolve.root = T)
plot.phylo(p, align.tip.label = T, use.edge.length = F, root.edge = T)
dev.off()
setwd("//wsl.localhost/Ubuntu/home/guerbrown/github_local/biol-4386-course-project-guerbrown/data/PACo")
setwd("//wsl.localhost/Ubuntu/home/guerbrown/github_local/biol-4386-course-project-guerbrown/data/PACo")
parasitetree <- "//wsl.localhost/Ubuntu/home/guerbrown/github_local/biol-4386-course-project-guerbrown/data/PACo/inqcophy_PACo_UCECO1SynTree_v02_guerbrown_22Feb2023.nex"
hosttree <- "//wsl.localhost/Ubuntu/home/guerbrown/github_local/biol-4386-course-project-guerbrown/data/PACo/inqcophy_PACo_CynipidTree_v02_guerbrown_22Feb2023.nex"
assocdata <- "//wsl.localhost/Ubuntu/home/guerbrown/github_local/biol-4386-course-project-guerbrown/data/PACo/inqcophy_PACo_AssociationMatrix_guerbrown_v6_20Feb2023.csv"
library(paco)
library(ape)
library(vegan)
library(phytools)
library(plotrix)
setwd("//wsl.localhost/Ubuntu/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output")
svg("//wsl.localhost/Ubuntu/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output/inqcophy_PACo_SynTree_v01_guerbrown_23Feb2023.svg")
#Import
p <- readNexus(parasitetree)
#Fixing tip labels. This is unnecessary but it's nice to make sure everything is plotting correctly
tiplabel_syn <- c("Synergus_sp.6", "S._punctatus_A", "S._campanula_A", "Synergus_sp.3", "Synergus_sp.7", "Synergus_sp.8",
"S._walshii_A", "S._erinacei_A", "S._erinacei_B", "S._villosus", "S._magnus", "Synergus_sp.2",
"S._ochreus", "S._oneratus_A", "S._oneratus_B", "S._oneratus_C", "S._coniferae", "S._lignicola",
"S._laeviventris_A", "S._laeviventris_B", "S._laeviventris_C")
p$tip.label <- tiplabel_syn
#Rooting the phylogeny based on a version of the tree with an outgroup and plotting
root.phylo(p, 1, resolve.root = T)
plot.phylo(p, align.tip.label = T, use.edge.length = F, root.edge = T)
dev.off()
setwd("/home/guerbrown/github_local/biol-4386-course-project-guerbrown/output")
